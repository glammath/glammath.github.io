{"version":3,"sources":["ProtofunctionContext.tsx","GlamContext.tsx","components/MathQuillField.tsx","components/InfoDialog.tsx","components/Icons.tsx","components/FunctionEntry.tsx","components/LeftSidebar.tsx","Signals.ts","components/PlotObject.tsx","components/PlotGrid.tsx","components/GraphController.tsx","index.tsx"],"names":["ProtofunctionType","GlamAppState","limits","focusedArc","selectedArc","drawList","signalReducer","state","action","newState","signal","console","log","JSON","stringify","signalName","debug","arc","window","_glamState","SignalContext","React","createContext","GlamAppContextProvider","props","useReducer","dispatch","Provider","value","children","Protofunction","_id","_name","name","id","parameterName","style","stroke","type","C","text","stack","functionName","jitFunction","drawing","this","ProtofunctionContext","undefined","ProtofunctionContextProvider","oldCtx","update","newCtx","pfId","change","ctx","useProtofunction","ctxValue","useContext","StackObjectType","InfoDialog","pf","updatePf","disassembly","useMemo","getDisassembly","className","title","isOpen","onClose","closeCallback","Classes","DIALOG_BODY","vertical","panel","min","max","stepSize","onChange","n","opacity","parseFloat","toString","CODE_BLOCK","NewPointIcon","width","height","viewBox","cx","cy","r","fill","Colors","GREEN5","NewArcIcon","d","strokeWidth","mq","MathQuill","getInterface","SemanticParser","fxnName","fxnParam","symbol","skipTo","tokens","parseErr","err","num","push","NUMBER","Module","Globals","isGlobal","IDENTIFIER","parseError","op","OPERATOR","i","thisToken","UNARY_OPS","find","startsWith","rem","substr","length","visitIdentifier","visitToken","visitUnary","token","prev","next","overnext","endsWith","visitNumber","maybeVisitMultisymbol","visitBinary","x","matchAll","TOKENIZER","match","FUNCTION_PATTERN","visitMath","generateFunctionName","raw","map","obj","join","sha1","MathQuillField","useState","setMf","divRef","useRef","useEffect","current","field","MathField","config","handlers","edit","__controller","exportText","parser","visitFunctionDefinition","onError","onSuccess","el","classList","add","focus","ref","jitCache","FunctionEntry","functionSourceOpen","setFunctionSourceOpen","error","setError","getName","hasOwnProperty","compiler","MathCompilerDP","fxn","compile","delete","drawCallback","C2C","minimal","icon","onClick","event","intent","Intent","WARNING","NONE","backgroundColor","newColor","Math","random","disabled","loading","SUCCESS","fxnArg","small","DANGER","release","removeCallback","NewFunctionEntry","large","addFunction","R2C","LeftSidebar","nextPf","setNextPf","Map","activePfs","setActivePfs","padding","href","target","paddingLeft","font","size","pair","pfs","oldState","set","_build","extra","data","_dataType","t","SigArcFocus","PlotObject","PlotArc","multipoint","RealMultipointDP","res","points","fullEval","Float64Array","getValues","onMouseOver","onMouseOut","ColorPlot","ComplexMultipointDP","colors","cb","getColors","image","canvas","document","createElement","getContext","buffer","Uint8ClampedArray","imageData","ImageData","putImageData","toDataURL","y","preserveAspectRatio","PlotGrid","container","setGridSteps","setOriginGridCoords","setNMajorTicks","viewportCenter","offsetWidth","offsetHeight","_gridSteps","ceil","_originGridCoords","majorInterval","majorTicks","minorTicksPerMajor","minorTicks","hideMinorGrid","PlotAxes","minorInterval","patternUnits","x1","y1","x2","y2","Array","keys","fontSize","abs","GraphController","setDrawList","draw","useCallback","remove","filter","includes","addEventListener","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c2a309e9.chunk.js","sourcesContent":["import React, {\n    createContext,\n    CSSProperties,\n    Dispatch,\n    ProfilerOnRenderCallback, SetStateAction,\n    useContext,\n    useMemo,\n    useReducer,\n    useState\n} from \"react\";\nimport {StackObject} from \"./components/MathQuillField\";\nimport {Fxn} from \"./GlamCore\";\n\nexport enum ProtofunctionType {\n    C,\n    R2C,\n    C2C,\n}\n\nexport class Protofunction {\n    name: string\n    id: number\n    parameterName: string = \"\"\n    style: CSSProperties = {stroke: \"white\"}\n    type: ProtofunctionType = ProtofunctionType.C\n    text: string = \"\"\n    stack: StackObject[] = []\n    functionName: string = \"\"\n    jitFunction?: Fxn\n    drawing: boolean = false\n\n    constructor(_id: number, _name: string) {\n        this.id = _id\n        this.name = _name\n    }\n}\n\n\ntype ProtofunctionContextType = Record<number, Protofunction>\n\nconst ProtofunctionContext = React.createContext<[ProtofunctionContextType, Dispatch<UpdateProtofunctionAction>] | undefined>(undefined)\n\ninterface UpdateProtofunctionAction {\n    pfId: number\n    change: any\n}\n\nexport const ProtofunctionContextProvider: React.FC = (props) => {\n    const [ctx, dispatch] = useReducer((oldCtx: ProtofunctionContextType, update: UpdateProtofunctionAction) => {\n        let newCtx = {...oldCtx}\n\n        newCtx[update.pfId] = {\n            ...(oldCtx[update.pfId] ? oldCtx[update.pfId] : new Protofunction(update.pfId, \"New Function\")),\n            ...update.change\n        }\n        return newCtx\n    }, {})\n\n    return <ProtofunctionContext.Provider value={[ctx, dispatch]}>\n        {props.children}\n    </ProtofunctionContext.Provider>\n}\n\nexport function useProtofunction(pfId: number, type?: ProtofunctionType): [Protofunction, Dispatch<any>] {\n    const ctxValue = useContext(ProtofunctionContext)\n    if (!ctxValue) {\n        throw \"Protofunction context not provided!\"\n    }\n\n    const [ctx, dispatch] = ctxValue\n    if (!ctx[pfId]) {\n        dispatch({pfId: pfId, change: {type: type}})\n        ctx[pfId] = new Protofunction(pfId, \"New Function\")\n    }\n\n    return [ctx[pfId], (change: any) => dispatch({pfId: pfId, change: change})]\n}\n\nexport function useProtofunctionCreator(): [number, Dispatch<ProtofunctionType>] {\n    const ctxValue = useContext(ProtofunctionContext)\n    if (!ctxValue) {\n        throw \"Protofunction context not provided!\"\n    }\n\n    const [ctx, dispatch] = ctxValue\n\n    return [Object.values(ctx).length, (type) => dispatch({pfId: Object.values(ctx).length, change: {type: type}})]\n}\n","import React, {Dispatch, Reducer, useContext, useMemo, useReducer} from \"react\";\nimport {SigArcFocus, Signal, SS} from \"./Signals\";\nimport {complex, ptr} from \"./GlamCore\";\n\nexport type functionSupplier = (minX: number, minY: number, maxX: number, maxY: number) => complex[]\n\nexport class GlamAppState {\n    limits: [number, number, number, number] = [-4, -4, 4, 4]\n\n    focusedArc: ptr = 0\n    selectedArc: ptr = 0\n    drawList: number[] = []\n}\n\ninterface ContextContainer {\n    _glamState: GlamAppState\n}\n\nconst signalReducer: Reducer<GlamAppState, Signal> = (state, action) => {\n    let newState = state\n\n    type signalDataType = Parameters<typeof action._dataType>[0]\n    const signal = action as signalDataType\n    console.log(\"DEBUG: signal \" + JSON.stringify(action));\n\n    switch (action.signalName) {\n        case \"Ready\":\n            break;\n        case \"ArcFocus\":\n            console.debug(`focus arc: ${signal.arc}`)\n            newState.focusedArc = signal.arc\n            break;\n    }\n\n    (window as unknown as ContextContainer)._glamState = newState\n    return newState;\n}\n\nexport const SignalContext = React.createContext(null as unknown as [GlamAppState, Dispatch<any>])\n\nexport const GlamAppContextProvider: React.FC = (props) => {\n    const [state, dispatch] = useReducer(signalReducer, new GlamAppState())\n\n    return (\n        <SignalContext.Provider value={[state, dispatch]}>\n        {props.children}\n    </SignalContext.Provider>)\n}\n","/*\n * Copyright 2021 Kioshi Morosin <glam@hex.lc>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {MathField, MathFieldConfig} from \"../MathQuill\";\n\nimport \"./MathQuillRestyler.css\"\nimport sha1 from \"crypto-js/sha1\";\n\ninterface MathQuillFieldProps {\n    config?: MathFieldConfig\n    onError?: (msg: string) => void\n    onSuccess?: (stack: StackObject[], name: string, arg: string, raw: string) => void\n    className?: string\n}\n\nconst mq = MathQuill.getInterface(2)\n\nenum StackObjectType {\n    NUMBER,\n    IDENTIFIER,\n    OPERATOR,\n    FXNCALL\n}\n\nexport interface StackObject {\n    value: string\n    type: StackObjectType\n}\n\nexport class SemanticParser {\n    static UNARY_OPS = [ // order here matters\n        \"sinh\",\n        \"cosh\",\n        \"tanh\",\n        \"sech\",\n        \"csch\",\n        \"coth\",\n        \"sin\",\n        \"cos\",\n        \"tan\",\n        \"sec\",\n        \"csc\",\n        \"cot\",\n        \"arg\"\n    ]\n\n    fxnName?: string\n    fxnParam?: string\n    private symbol = \"\"\n    private skipTo = -1\n    stack: StackObject[] = []\n    private tokens: RegExpMatchArray[] = []\n    parseErr: string | null = null\n\n    // matches a function definition in the form `f(z)=z+1` with the first capture group giving the function name,\n    // the second giving the parameter name, and the third giving the string representing the definition.\n    private static FUNCTION_PATTERN = /^([a-zA-Z\\\\]+(?:_[a-zA-Z0-9,]+)?)\\*? ?\\(([a-zA-Z\\\\]+(?:_[a-zA-Z0-9,\\\\]+)?)\\) ?= ?(.*)$/\n\n    // matches tokens in a function definition, capturing the following groups:\n    // 1 - decimal numbers, i.e. 2.5. will also capture something like 2.5*i\n    // 2 - multi-character identifiers (which MQ puts a space after). may be a variable or a unary operator\n    // 3 - single-character identifiers\n    // 4 - binary operators, one of +-*/^\n    // 5 - ( or )\n    private static TOKENIZER = /(-?\\d+(?:\\.\\d+)?)(?:\\*i)?|([a-zA-Z0-9]{2,} (?:_\\([^)]+\\)|_[a-zA-Z0-9])?)|([a-zA-Z](?:_\\([^)]+\\)|_[a-zA-Z0-9])?)|([+\\-*/^])|([()])/g\n\n    parseError(err: string) {\n        this.parseErr = err\n    }\n\n    visitNumber(num: string) {\n        this.stack.push({type: StackObjectType.NUMBER, value: num})\n    }\n\n    visitIdentifier(id: string) {\n        if (id === this.fxnParam || Module.Globals.isGlobal(id)) {\n            this.stack.push({type: StackObjectType.IDENTIFIER, value: id})\n        } else {\n            this.parseError(\"unrecognized symbol\")\n        }\n    }\n\n    visitBinary(op: string) {\n        this.stack.push({type: StackObjectType.OPERATOR, value: op})\n    }\n\n    visitUnary(op: string) {\n        this.stack.push({type: StackObjectType.OPERATOR, value: op})\n    }\n\n    maybeVisitMultisymbol(i: number): boolean {\n        if (this.symbol !== \"\") {\n            const thisToken = this.tokens[i]\n\n            if (thisToken[3]) {\n                this.symbol += thisToken[3]\n            }\n\n            const op = SemanticParser.UNARY_OPS.find(op => this.symbol.startsWith(op))\n            if (!op) {\n                this.parseError(\"illegal unary operator\")\n                return false\n            }\n            const rem = this.symbol.substr(op.length)\n            this.symbol = \"\"\n            if (rem && rem.length > 0) {\n                this.visitIdentifier(rem)\n            } else {\n                this.visitToken(i + 1)\n            }\n            this.visitUnary(op)\n            return true\n        }\n        return false\n    }\n\n    visitToken(i: number) {\n        if (i >= this.tokens.length) {\n            return\n        }\n\n        const token = this.tokens[i]\n        const prev = this.tokens[i - 1]\n        const next = this.tokens[i + 1]\n\n        if (token[5]) {\n            if (token[5] === \")\") {\n                this.skipTo = i + 1\n                return\n            } else if (token[5] === \"(\") {\n                this.visitToken(i + 1)\n            } else {\n                this.parseError(\"malformed bracket expression\")\n                return\n            }\n        } else if (token[1]) {\n            const overnext = this.tokens[i + 2]\n            if (next && next[4] && (next[4] === \"+\" || next[4] === \"-\") && overnext && overnext[1] && overnext[1].endsWith(\"i\")) {\n                this.visitNumber(token[1] + next[4] + overnext[1])\n                this.visitToken(i + 2)\n                return\n            } else {\n                this.visitNumber(token[1])\n                this.visitToken(i + 1)\n                return;\n            }\n            return\n        } else if (token[2]) {\n            // we need to check if it smashed a unary operator with another identifier\n            // e.g. sin Gamma  will be exported as sinGamma\n        } else if (token[3]) {\n            if (next && next[3]) {\n                this.symbol += token[3]\n            } else {\n                if (!this.maybeVisitMultisymbol(i)) {\n                    this.visitIdentifier(token[3])\n                }\n            }\n        } else if (token[4]) {\n            if (token[4] === \"-\") {\n                // check for unary negative operator\n                if (next && (next[3] || next[5] || next[1]) && (!prev || !prev[3] || !prev[1] || prev[5] === \"(\")) {\n                    this.visitNumber(\"-1\")\n                    this.visitToken(i + 1)\n                    this.visitBinary(\"*\")\n                    return\n                }\n            }\n\n            if (!prev || !next) {\n                this.parseError(\"incomplete binary operation\")\n                return;\n            }\n            this.visitToken(i + 1)\n            this.visitBinary(token[4])\n            return\n        }\n\n        if (this.skipTo > 0) {\n            if (this.tokens[this.skipTo]) {\n                const x = this.skipTo\n                this.skipTo = -1\n                this.visitToken(x)\n                return\n            } else {\n                return\n            }\n        } else {\n            this.visitToken(i + 1)\n        }\n    }\n\n    visitMath(text: string) {\n        this.tokens = [...text.matchAll(SemanticParser.TOKENIZER)]\n        this.visitToken(0)\n    }\n\n    visitFunctionDefinition(text: string) {\n        const match = text.match(SemanticParser.FUNCTION_PATTERN)\n        if (!match || match.length !== 4) {\n            this.parseError(\"malformed function definition\")\n            return\n        }\n        this.fxnName = match[1]\n        this.fxnParam = match[2]\n        this.visitMath(match[3])\n    }\n}\n\nexport function generateFunctionName(fxnName: string, fxnParam: string, stack: StackObject[]) {\n    const raw = fxnName + \"_\" + fxnParam + stack.map(obj => obj.type + \":\" + obj.value).join(\"_\")\n    return \"__jit_\" + sha1(raw).toString().substr(0, 16)\n}\n\nexport const MathQuillField: React.FC<MathQuillFieldProps> = (props) => {\n    const [mf, setMf] = useState<MathField>()\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (divRef.current) {\n            const field = mq.MathField(divRef.current, {\n                ...props.config,\n                handlers: {\n                    edit: field => {\n                        const text = field.__controller.exportText()\n                        const parser = new SemanticParser()\n                        parser.visitFunctionDefinition(text)\n\n                        if (parser.parseErr && props.onError) {\n                            props.onError(parser.parseErr)\n                        } else if (props.onSuccess && parser.fxnName && parser.fxnParam) {\n                            props.onSuccess(parser.stack, parser.fxnName, parser.fxnParam, text)\n                        }\n\n                        if (props.config?.handlers?.edit) {\n                            props.config.handlers.edit(field)\n                        }\n                    }\n                }\n            })\n            field.el().classList.add(\"mq-restyler-field\")\n            field.focus()\n\n            setMf(field)\n        }\n    }, [divRef, props.config])\n\n    return <div className={props.className} ref={divRef} />\n}\n","import {Classes, Dialog, Label, Slider, Tab, Tabs} from \"@blueprintjs/core\";\nimport React, {useMemo} from \"react\";\nimport {useProtofunction} from \"../ProtofunctionContext\";\nimport \"./InfoDialog.css\"\n\ninterface InfoDialogProps {\n    isOpen: boolean\n    closeCallback: () => void;\n    pfId: number\n}\n\nexport const InfoDialog: React.FC<InfoDialogProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n    const disassembly = useMemo(() => {\n        if (pf.jitFunction) {\n            return pf.jitFunction.getDisassembly()\n        } else {\n            return \"module is not compiled!\"\n        }\n    }, [pf.jitFunction])\n\n    return <Dialog className=\"bp3-dark info-dialog\" title={`${pf.id}: ${pf.name}(${pf.parameterName})`} isOpen={props.isOpen} onClose={props.closeCallback}>\n        <Tabs id=\"InfoTabs\" className={Classes.DIALOG_BODY} vertical={true}>\n            <Tab id=\"options\" title=\"Options\" panel={<>\n                <Label>\n                    Opacity\n                    <p />\n                    <Slider min={0.0} max={1.0} stepSize={0.005} vertical={true}\n                            onChange={n => updatePf({style: {...pf.style, opacity: n}})}\n                            value={parseFloat((pf.style.opacity || 1).toString())}/>\n                </Label>\n            </>} />\n            <Tab id=\"disassembly\" title=\"Disassembly\" panel={<div className={Classes.CODE_BLOCK} >\n                    <pre>{disassembly}</pre>\n                </div>}/>\n        </Tabs>\n    </Dialog>\n}","import {Colors} from \"@blueprintjs/core\";\n\nexport const NewPointIcon = <svg width={16} height={16} viewBox=\"0 0 16 16\">\n    <desc>new-point</desc>\n    <circle cx=\"50%\" cy=\"50%\" r={6} fill={Colors.GREEN5}/>\n</svg>\n\nexport const NewArcIcon = <svg width={16} height={16} viewBox=\"0 0 16 16\">\n    <desc>new-arc</desc>\n    <path d=\"M0,8 Q4,0 8,8 12,16 16,8\" stroke={Colors.GREEN5} fill=\"none\" strokeWidth={2}/>\n</svg>\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {ProtofunctionType, useProtofunction} from \"../ProtofunctionContext\";\nimport {Button, Intent} from \"@blueprintjs/core\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\"\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\"\nimport \"../BP3Restyler.css\"\nimport {InfoDialog} from \"./InfoDialog\";\nimport {NewArcIcon, NewPointIcon} from \"./Icons\";\nimport {Fxn} from \"../GlamCore\";\nimport {generateFunctionName, MathQuillField} from \"./MathQuillField\";\n\ninterface FunctionEntryProps {\n    n: number\n    removeCallback: () => void\n    drawCallback: (id: number, remove: boolean) => void\n    type: ProtofunctionType\n}\n\nconst jitCache: Record<string, Fxn> = {}\n\nexport const FunctionEntry: React.FC<FunctionEntryProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.n, props.type)\n    const inputRef = useRef<HTMLInputElement>(null)\n    const prettyRef = useRef<HTMLDivElement>(null)\n    const [compiling, setCompiling] = useState(false)\n    const [functionSourceOpen, setFunctionSourceOpen] = useState(false)\n    const [error, setError] = useState<string | null>(null)\n\n    useEffect(() => {\n        if (pf.drawing) {\n            if (!pf.jitFunction || (pf.jitFunction.getName() !== pf.functionName)) {\n                if (!jitCache.hasOwnProperty(pf.functionName)) {\n                    const compiler = new Module.MathCompilerDP(pf.functionName, pf.name, pf.parameterName)\n                    const fxn = compiler.compile(pf.stack);\n                    updatePf({jitFunction: fxn})\n                    jitCache[pf.functionName] = fxn;\n                    compiler.delete()\n                } else {\n                    console.debug(\"cache hit for \" + jitCache[pf.functionName])\n                    updatePf({jitFunction: jitCache[pf.functionName]})\n                }\n                props.drawCallback(props.n, false)\n                updatePf({drawing: false})\n            }\n        }\n\n        // we don't automatically recompile (yet)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pf.drawing])\n\n    return (<div className=\"function-entry-container\">\n        <div className=\"function-control-panel\">\n            {pf.type === ProtofunctionType.C2C\n                ? <Button minimal icon={pf.style.opacity === 0 ? \"eye-off\" : \"eye-open\"} onClick={event => {\n                    if (pf.style.opacity === 0) {\n                        updatePf({style: {...pf.style, opacity: 0.65}})\n                    } else {\n                        updatePf({style: {...pf.style, opacity: 0.}})\n                    }\n                }} intent={pf.style.opacity === 0 ? Intent.WARNING : Intent.NONE}/>\n                : <button className=\"function-color-button\" style={{backgroundColor: pf.style.stroke}} onClick={(event => {\n                const newColor = `hsla(${Math.random() * 360}, 80%, 60%, 1)`;\n                updatePf({style: {stroke: newColor}})\n            })} />}\n\n            <Button id=\"draw-function\" minimal icon=\"play\" disabled={!pf.stack || pf.stack.length === 0} loading={pf.drawing} onClick={event => {\n                if (pf.jitFunction && pf.jitFunction.getName() === pf.functionName) {\n                    return\n                }\n                updatePf({drawing: true})\n            }} intent={pf.jitFunction ? (pf.jitFunction.getName() === pf.functionName ? Intent.SUCCESS : Intent.WARNING) : Intent.SUCCESS}/>\n\n            <Button minimal icon=\"cog\" disabled={!pf.jitFunction} onClick={event => setFunctionSourceOpen(true)} />\n        </div>\n{/*\n        <input ref={inputRef} className=\"function-input-line\" onInput={(event) => updatePf({text: (event.target as HTMLInputElement).value})}/>\n        <div ref={prettyRef} className=\"function-pretty\" />\n*/}\n        <MathQuillField className=\"function-input\" onError={setError} onSuccess={(stack, fxnName, fxnArg, raw) => {\n            setError(null)\n            updatePf({\n                name: fxnName,\n                parameterName: fxnArg,\n                text: raw,\n                stack: stack,\n                functionName: generateFunctionName(fxnName, fxnArg, stack)\n            })\n        }}/>\n        {error === null ? <></> : <div className=\"function-error\">{error}</div>}\n        <div className=\"function-delete-button-container\">\n            <Button minimal small={true} icon=\"small-cross\" intent={Intent.DANGER} onClick={() => {\n                props.drawCallback(pf.id, true)\n                if (pf.jitFunction) {\n                    pf.jitFunction.release()\n                }\n                props.removeCallback()\n            }} />\n        </div>\n\n        <InfoDialog isOpen={functionSourceOpen} closeCallback={() => setFunctionSourceOpen(false)} pfId={props.n} />\n    </div>)\n}\n\ninterface NewFunctionEntryProps {\n    addFunction: (type: ProtofunctionType) => void\n}\n\nexport const NewFunctionEntry: React.FC<NewFunctionEntryProps> = (props) => {\n\n    return <div className=\"new-function-button-container\">\n            <Button id=\"new-point\" minimal icon={NewPointIcon} intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.C)} disabled={true}/>\n            <Button id=\"new-arc\" minimal icon={NewArcIcon} intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.R2C)}/>\n            <Button id=\"new-fxn\" minimal intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.C2C)}><b>&#x2102;</b></Button>\n        </div>\n}\n\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport \"./FunctionEntry\"\nimport {FunctionEntry, NewFunctionEntry} from \"./FunctionEntry\";\nimport \"./LeftSidebar.css\"\nimport {ProtofunctionType} from \"../ProtofunctionContext\";\nimport {AnchorButton} from \"@blueprintjs/core\";\n\ninterface SidebarProps {\n    drawCallback: (id: number, remove: boolean) => void\n}\n\nexport const LeftSidebar: React.FC<SidebarProps> = (props) => {\n    const [nextPf, setNextPf] = useState(0)\n    const [activePfs, setActivePfs] = useState<Map<number, ProtofunctionType>>(new Map())\n\n    return <div className=\"left-sidebar\">\n        <div style={{padding: \"2px\" }}>\n            <AnchorButton text={\"Github\"} href={\"https://github.com/glammath/glam\"} target={\"_blank\"}/>\n            <span style={{paddingLeft: \"25%\", font: \"14pt bold\"}}>Glam</span>\n        </div>\n        {activePfs.size > 0\n            ? [...activePfs].map(pair => <FunctionEntry key={pair[0]} n={pair[0]} removeCallback={() => {\n                setActivePfs(pfs => {\n                    const newState = new Map(pfs)\n                    newState.delete(pair[0])\n                    return newState\n                })\n            }} drawCallback={props.drawCallback} type={pair[1]}/>)\n            : <></>}\n        <NewFunctionEntry addFunction={(type => {\n            setActivePfs(oldState => {\n                const newState = new Map(oldState)\n                newState.set(nextPf, type)\n                return newState\n            })\n            setNextPf(n => n + 1)\n        })}/>\n        </div>\n}\n","import {Protofunction} from \"./ProtofunctionContext\";\nimport {complex} from \"./GlamCore\";\n\nexport interface Signal {\n    signalName: string\n    _dataType: (t: any) => void\n}\n\nexport type SS<T> = (data: T) => Signal\n\nfunction _build<T>(name: string, extra = {}): SS<T> {\n    return (data: T) => {\n        return {\n            signalName: name,\n            ...data,\n            ...extra,\n            _dataType: (t: T) => {}\n        }\n    };\n}\n\nexport const SigReady: SS<{}> = _build(\"Ready\")\nexport const SigArcFocus: SS<{arc: number}> = _build(\"ArcFocus\")\nexport const SigTreeRecalculate: SS<{root: string, value: complex}> = _build(\"TreeRecalculate\")\n","/*\n * Copyright 2021 Kioshi Morosin <glam@hex.lc>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {createRef, Dispatch, useContext, useEffect, useMemo, useReducer, useState} from \"react\";\nimport {Protofunction, ProtofunctionType, useProtofunction} from \"../ProtofunctionContext\";\nimport \"./PlotObject.css\"\nimport {SigArcFocus} from \"../Signals\";\nimport {SignalContext} from \"../GlamContext\";\n\nexport interface PlotObjectProps {\n    pfId: number\n    limits: [number, number, number, number]\n    res: number\n}\n\ninterface PlotObjectChildProps extends PlotObjectProps {\n    pf: Protofunction\n    updatePf: Dispatch<any>\n}\n\nexport const PlotObject: React.FC<PlotObjectProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n\n    switch (pf.type) {\n        case ProtofunctionType.C:\n            return <></>\n        case ProtofunctionType.R2C:\n            return <PlotArc {...props} pf={pf} updatePf={updatePf}/>\n        case ProtofunctionType.C2C:\n            return <ColorPlot {...props} pf={pf} updatePf={updatePf}/>\n    }\n}\n\nexport const PlotPoint: React.FC<PlotObjectChildProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n    const point = useMemo(() => {\n        if (pf.stack) {\n            // do a one-off evaluation here\n            return [0,0]\n        }\n    }, [pf.stack])\n\n    return <circle id={`plot-point-${pf.id}`} className=\"plot-point\" style={pf.style} r={0.1}/>\n}\n\nexport const PlotArc: React.FC<PlotObjectChildProps> = (props) => {\n    const multipoint = useMemo(() => {\n        return new Module.RealMultipointDP(props.pf.jitFunction!, props.limits[0], props.limits[2], props.res)\n    }, [props.pf.jitFunction?.getName() || \"\"])\n    const [ctx, dispatch] = useContext(SignalContext)\n\n    const points = useMemo(() => {\n        if (multipoint) {\n            console.debug(\"evaluating multipoint\")\n            multipoint.fullEval()\n            return new Float64Array(multipoint.getValues())\n        } else {\n            // todo refine multipoint if needed\n        }\n\n    }, [multipoint])\n\n    return (<polyline id={`plot-arc-${props.pfId}`} className=\"plot-arc\" fill=\"none\" style={props.pf.style}\n                      points={points?.join(\",\")} onMouseOver={() => {\n        dispatch(SigArcFocus({arc: props.pfId}))\n    }} onMouseOut={() => dispatch(SigArcFocus({arc: -1}))}/>)\n}\n\nexport const ColorPlot: React.FC<PlotObjectChildProps> = (props) => {\n    const multipoint = useMemo(() => {\n        return new Module.ComplexMultipointDP(props.pf.jitFunction!, [props.limits[0], props.limits[1]], [props.limits[2], props.limits[3]], props.res)\n    }, [props.pf.jitFunction])\n\n    const colors = useMemo(() => {\n        if (multipoint) {\n            console.debug(\"evaluating multipoint\")\n            multipoint.fullEval()\n            const cb = multipoint.getColors()\n            console.debug(cb)\n            return cb\n        } else {\n            // todo refine multipoint if needed\n        }\n\n    }, [multipoint])\n\n    const image = useMemo(() => {\n        if (colors) {\n            const canvas = document.createElement(\"canvas\")\n            const ctx = canvas.getContext(\"2d\")\n            if (!ctx) {\n                console.error(\"could not get canvas context\")\n                return\n            }\n            const width = (props.limits[2] - props.limits[0]) * props.res\n            const height = (props.limits[3] - props.limits[1]) * props.res\n            canvas.width = width\n            canvas.height = height\n            console.debug(\"plot: \" + width + \"x\" + height)\n\n            const buffer = new Uint8ClampedArray(colors) // unfortunately we need to copy the color buffer here, but it's okay.\n            const imageData = new ImageData(buffer, width)\n            ctx.putImageData(imageData, 0, 0)\n            return canvas.toDataURL(\"image/png\")\n        }\n    }, [colors])\n\n    useEffect(() => {\n        props.updatePf({style: {...props.pf.style, opacity: 0.65}})\n    }, [])\n\n    return <image id={`color-plot-${props.pf.id}`} className=\"color-plot\"\n                  width={(props.limits[2] - props.limits[1])} height={(props.limits[3] - props.limits[1])} href={image}\n                  x={props.limits[0]} y={props.limits[1]} preserveAspectRatio=\"xMidYMid meet\"\n                  style={props.pf.style}/>\n}\n","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport \"./PlotGrid.css\"\nimport {PlotObject} from \"./PlotObject\";\n\nexport interface PlotGridProps {\n    majorTicks: number // math units between each major tick\n    minorTicks: number // minor ticks per major tick\n    limits: [number, number, number, number] // in math units\n    drawList: number[]\n}\n\nexport const PlotGrid: React.FC<PlotGridProps> = (props) => {\n    const container = useRef<HTMLDivElement>(null);\n    const [gridSteps, setGridSteps] = useState(0);\n    const [originGridCoords, setOriginGridCoords] = useState<[number, number]>([0, 0]);\n    const [nMajorTicks, setNMajorTicks] = useState([0, 0])\n\n    useEffect(() => {\n        if (!container.current) {\n            return;\n        }\n\n        const viewportCenter = [container.current.offsetWidth / 2, container.current.offsetHeight / 2]\n\n        const _gridSteps = Math.min(container.current.offsetWidth / (props.limits[1] - props.limits[0]), container.current.offsetHeight / (props.limits[3] - props.limits[2]));\n        setNMajorTicks([Math.ceil(container.current.offsetWidth / _gridSteps), Math.ceil(container.current.offsetHeight / _gridSteps)])\n\n        const _originGridCoords: [number, number] = [viewportCenter[0], viewportCenter[1]]\n        setGridSteps(_gridSteps)\n        setOriginGridCoords(_originGridCoords)\n\n    }, [props])\n\n    return (<div ref={container} className=\"plot-grid-container\">\n        <svg className=\"plot-space\" width=\"100%\" height=\"100%\"\n             viewBox={`${props.limits[0]} ${props.limits[1]} ${props.limits[2] - props.limits[0]} ${props.limits[3] - props.limits[1]}`}\n             preserveAspectRatio=\"xMidYMid slice\">\n            <g className=\"coordinate-y-flip\">\n                <PlotAxes limits={props.limits} majorInterval={props.majorTicks} minorTicksPerMajor={props.minorTicks} hideMinorGrid={false} />\n                {props.drawList.map(id => {\n                    return <PlotObject key={id} pfId={id} limits={[props.limits[0], props.limits[1], props.limits[2], props.limits[3]]} res={50} />\n                })}\n            </g>\n        </svg>\n    </div>)\n}\n\nexport interface PlotAxisProps {\n    limits: [number, number, number, number]\n    majorInterval: number\n    minorTicksPerMajor: number\n    hideMinorGrid: boolean\n}\n\nconst PlotAxes: React.FC<PlotAxisProps> = (props) => {\n    const minorInterval = props.majorInterval / props.minorTicksPerMajor;\n\n    return (<>\n            <defs>\n                <pattern id=\"grid-lines-minor\" width={minorInterval}\n                         height={minorInterval}\n                         patternUnits=\"userSpaceOnUse\">\n                    <path className=\"plot-grid-minor-line\" d={`M ${minorInterval} 0 L 0 0 0 ${minorInterval}`}/>\n                </pattern>\n                <pattern id=\"grid-lines-major\" width={props.majorInterval} height={props.majorInterval} patternUnits=\"userSpaceOnUse\">\n                    {props.hideMinorGrid ? <></> : <rect width={props.majorInterval} height={props.majorInterval} fill=\"url(#grid-lines-minor)\"/>}\n                    <path className=\"plot-grid-major-line\" d={`M ${props.majorInterval} 0 L 0 0 0 ${props.majorInterval}`}/>\n                </pattern>\n            </defs>\n\n            <rect x={props.limits[0]} y={props.limits[1]} width=\"100%\" height=\"100%\" fill=\"url(#grid-lines-major)\" />\n\n            <line className=\"plot-grid-axis-line\" x1={props.limits[0]} y1=\"0\" x2={props.limits[2]} y2=\"0\" />\n            <line className=\"plot-grid-axis-line\" x1=\"0\" y1={props.limits[1]} x2=\"0\" y2={props.limits[3]} />\n\n            {[...Array(Math.ceil(props.limits[2] / props.majorInterval)).keys()].map(n => n+1).map(n => {\n                return <text key={n + \",0\"} className=\"plot-grid-major-label\" x={n} y=\"0\" fontSize=\"0.1\">{n}</text>\n            })}\n\n            {[...Array(Math.ceil(Math.abs(props.limits[0] / props.majorInterval))).keys()].map(n => n+1).map(n => {\n                return <text key={\"-\" + n + \",0\"} className=\"plot-grid-major-label\" x={-n} y=\"0\" fontSize=\"0.1\">-{n}</text>\n            })}\n\n\n            {[...Array(Math.ceil(props.limits[3] / props.majorInterval)).keys()].map(n => n+1).map(n => {\n                return <text key={\"0,\" + n}className=\"plot-grid-major-label\" x=\"0\" y={n} fontSize=\"0.1\">-{n}i</text>\n            })}\n\n            {[...Array(Math.ceil(Math.abs(props.limits[1] / props.majorInterval))).keys()].map(n => n+1).map(n => {\n                return <text key={\"0,-\" + n} className=\"plot-grid-major-label\" x=\"0\" y={-n} fontSize=\"0.1\">{n}i</text>\n            })}\n    </>)\n}\n","import {GlamAppContextProvider} from \"../GlamContext\";\nimport {ProtofunctionContextProvider} from \"../ProtofunctionContext\";\nimport {LeftSidebar} from \"./LeftSidebar\";\nimport {PlotGrid} from \"./PlotGrid\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const GraphController: React.FC = (props) => {\n    const [drawList, setDrawList] = useState<number[]>([])\n    const draw = useCallback((pfId: number, remove: boolean = false) => {\n        if (remove) {\n            setDrawList(drawList.filter(n => n !== pfId))\n        } else if (!drawList.includes(pfId)) {\n            setDrawList([...drawList, pfId])\n        }\n    }, [drawList, setDrawList])\n\n    return (<>\n        <GlamAppContextProvider>\n            <ProtofunctionContextProvider>\n                <LeftSidebar drawCallback={draw} />\n                <PlotGrid majorTicks={1} minorTicks={5} limits={[-4, -4, 4, 4]} drawList={drawList}/>\n            </ProtofunctionContextProvider>\n        </GlamAppContextProvider>\n    </>)\n}","import './index.css';\nimport \"./GlamCore\"\nimport ReactDOM from \"react-dom\";\nimport {GraphController} from \"./components/GraphController\";\nimport React from \"react\";\n\nwindow.addEventListener(\"nativeInit\", () => {\n    ReactDOM.render(<GraphController />,\n        document.querySelector(\".glam-app-container\")\n    );\n})\n"],"sourceRoot":""}