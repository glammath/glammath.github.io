{"version":3,"sources":["ProtofunctionContext.tsx","GlamContext.tsx","ExpressionParser.ts","AsciiMathParser.js","components/InfoDialog.tsx","components/Icons.tsx","components/FunctionEntry.tsx","components/LeftSidebar.tsx","Signals.ts","components/PlotObject.tsx","GlamCore.tsx","components/PlotGrid.tsx","components/GraphController.tsx","index.tsx"],"names":["ProtofunctionType","GlamAppState","limits","focusedArc","selectedArc","drawList","signalReducer","state","action","newState","signal","console","log","JSON","stringify","signalName","debug","arc","window","_glamState","SignalContext","React","createContext","GlamAppContextProvider","props","useReducer","dispatch","Provider","value","children","Protofunction","_id","_name","name","id","parameterName","style","stroke","type","C","text","stack","functionName","jitFunction","drawing","this","ProtofunctionContext","undefined","ProtofunctionContextProvider","oldCtx","update","newCtx","pfId","change","ctx","useProtofunction","ctxValue","useContext","StackObjectType","AsciiMathParser","decimalsign","setup_symbols","sort_symbols","greek_letters","relations","constants","concat","left_brackets","asciimath","tex","right_brackets","free_tex","leftright_brackets","left_tex","right_tex","unary_symbols","func","rewriteleftright","acc","atname","atval","binary_symbols","option","rawfirst","non_constant_symbols","by_asciimath","a","b","length","sort","message","pos","neighbourhood","source","slice","Error","token","end","ttype","matches","filter","x","y","str","replace","_source","brackets","arguments","strip_space","tok","bracket","skip_brackets","skipleft","includes","left","skipright","right","middle","middle_asciimath","input","consume","exprs","eof","expr","expression_list","rb","right_bracket","def","lr","leftright_bracket","ss","subsup","push","chr","osource","reduced","re","m","exec","match","expression","comma","exact","negative","negative_expression","first","intermediate_or_fraction","second","c","dash","other_constant","intermediate","frac","ufirst","unbracket","usecond","numerator","denominator","simple","sub_expr","sup_expr","sub","sup","longest","matrix","bracketed_expression","binary","constant","unary","negative_simple","left_bracket","contents","matrix_contents","contents_tex","rows","map","r","join","matrix_tex","is_array","column_desc","leftright","row_length","lb","cells","columns","cell","matrix_cell","row_column_desc","lvert","rvert","l","position","quoted","escape_text","textfn","lb1","rb1","atex","op","arg1","arg2","u","sstex","barg","arg","argtex","raw","greek","number","arbitrary_constant","literal","re_greek","RegExp","re_number","sym","notm","nc","spos","symbol","FunctionDeclarationVisitor","_parser","parser","functionArg","abort","startsWith","visit","unaryExpr","rhsExpr","nameExpr","rightExpr","argExpr","FunctionDefinitionVisitor","_parent","parent","amParser","visitObject","OPERATOR","morphemeFromSymbol","visitLiteral","Module","_jit_morpheme_mul","params","bracketExpr","visitBranch","visitUnaryOperation","visitSubsup","fractionExpr","visitFractionPart","_jit_morpheme_div","leftExpr","visitBinaryOperation","_jit_morpheme_sub","isNaN","parseFloat","IDENTIFIER","operator","_jit_morpheme_add","_jit_morpheme_sin","_jit_morpheme_cos","_jit_morpheme_tan","_jit_morpheme_sinh","_jit_morpheme_cosh","_jit_morpheme_tanh","morpheme","NUMBER","exponent","parseResult","_jit_morpheme_exp","object","ExpressionParser","error","R2C","definitionExpr","definitionVisitor","obj","sha1","toString","substr","InfoDialog","pf","disassembly","useMemo","mod","ccall","getModule","getModuleLen","ptr","UTF8ToString","_free","className","title","isOpen","onClose","closeCallback","Classes","DIALOG_BODY","vertical","panel","CODE_BLOCK","NewPointIcon","width","height","viewBox","cx","cy","fill","Colors","GREEN5","NewArcIcon","d","strokeWidth","jitCache","FunctionEntry","n","updatePf","inputRef","useRef","prettyRef","useState","functionSourceOpen","setFunctionSourceOpen","useEffect","current","result","katex","render","throwOnError","displayMode","semanticParser","generateFunctionName","getName","metafactory","FunctionMetafactory","visitStack","visitEnd","install","getHandle","clone","delete","drawCallback","backgroundColor","onClick","event","newColor","Math","random","minimal","icon","disabled","loading","intent","Intent","NONE","WARNING","ref","onInput","target","small","DANGER","cleanup","removeCallback","NewFunctionEntry","SUCCESS","large","addFunction","C2C","LeftSidebar","nextPf","setNextPf","Map","activePfs","setActivePfs","size","pair","pfs","oldState","set","_build","extra","data","_dataType","t","SigArcFocus","PlotObject","PlotArc","multipoint","RealMultipoint","res","points","fullEval","getValues","address","len","HEAPF64","subarray","f64BufferView","onMouseOver","onMouseOut","ColorPlot","ComplexMultipoint","colors","cb","getColors","image","canvas","document","createElement","getContext","getBuffer","buffer","Uint8ClampedArray","HEAPU8","imageData","ImageData","putImageData","toDataURL","href","preserveAspectRatio","PlotGrid","container","setGridSteps","setOriginGridCoords","setNMajorTicks","viewportCenter","offsetWidth","offsetHeight","_gridSteps","min","ceil","_originGridCoords","majorInterval","majorTicks","minorTicksPerMajor","minorTicks","hideMinorGrid","PlotAxes","minorInterval","patternUnits","x1","y1","x2","y2","Array","keys","fontSize","abs","GraphController","setDrawList","draw","useCallback","remove","addEventListener","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.fce66866.chunk.js","sourcesContent":["import React, {\n    createContext,\n    CSSProperties,\n    Dispatch,\n    ProfilerOnRenderCallback, SetStateAction,\n    useContext,\n    useMemo,\n    useReducer,\n    useState\n} from \"react\";\nimport {StackObject} from \"./ExpressionParser\";\nimport {JITFunction} from \"./GlamCore\";\n\nexport enum ProtofunctionType {\n    C,\n    R2C,\n    C2C,\n}\n\nexport class Protofunction {\n    name: string\n    id: number\n    parameterName: string = \"\"\n    style: CSSProperties = {stroke: \"white\"}\n    type: ProtofunctionType = ProtofunctionType.C\n    text: string = \"\"\n    stack: StackObject[] = []\n    functionName: string = \"\"\n    jitFunction?: JITFunction\n    drawing: boolean = false\n\n    constructor(_id: number, _name: string) {\n        this.id = _id\n        this.name = _name\n    }\n}\n\n\ntype ProtofunctionContextType = Record<number, Protofunction>\n\nconst ProtofunctionContext = React.createContext<[ProtofunctionContextType, Dispatch<UpdateProtofunctionAction>] | undefined>(undefined)\n\ninterface UpdateProtofunctionAction {\n    pfId: number\n    change: any\n}\n\nexport const ProtofunctionContextProvider: React.FC = (props) => {\n    const [ctx, dispatch] = useReducer((oldCtx: ProtofunctionContextType, update: UpdateProtofunctionAction) => {\n        let newCtx = {...oldCtx}\n\n        newCtx[update.pfId] = {\n            ...(oldCtx[update.pfId] ? oldCtx[update.pfId] : new Protofunction(update.pfId, \"New Function\")),\n            ...update.change\n        }\n        return newCtx\n    }, {})\n\n    return <ProtofunctionContext.Provider value={[ctx, dispatch]}>\n        {props.children}\n    </ProtofunctionContext.Provider>\n}\n\nexport function useProtofunction(pfId: number, type?: ProtofunctionType): [Protofunction, Dispatch<any>] {\n    const ctxValue = useContext(ProtofunctionContext)\n    if (!ctxValue) {\n        throw \"Protofunction context not provided!\"\n    }\n\n    const [ctx, dispatch] = ctxValue\n    if (!ctx[pfId]) {\n        dispatch({pfId: pfId, change: {type: type}})\n        ctx[pfId] = new Protofunction(pfId, \"New Function\")\n    }\n\n    return [ctx[pfId], (change: any) => dispatch({pfId: pfId, change: change})]\n}\n\nexport function useProtofunctionCreator(): [number, Dispatch<ProtofunctionType>] {\n    const ctxValue = useContext(ProtofunctionContext)\n    if (!ctxValue) {\n        throw \"Protofunction context not provided!\"\n    }\n\n    const [ctx, dispatch] = ctxValue\n\n    return [Object.values(ctx).length, (type) => dispatch({pfId: Object.values(ctx).length, change: {type: type}})]\n}\n","import React, {Dispatch, Reducer, useContext, useMemo, useReducer} from \"react\";\nimport {SigArcFocus, Signal, SS} from \"./Signals\";\nimport {complex, ptr} from \"./GlamCore\";\n\nexport type functionSupplier = (minX: number, minY: number, maxX: number, maxY: number) => complex[]\n\nexport class GlamAppState {\n    limits: [number, number, number, number] = [-4, -4, 4, 4]\n\n    focusedArc: ptr = 0\n    selectedArc: ptr = 0\n    drawList: number[] = []\n}\n\ninterface ContextContainer {\n    _glamState: GlamAppState\n}\n\nconst signalReducer: Reducer<GlamAppState, Signal> = (state, action) => {\n    let newState = state\n\n    type signalDataType = Parameters<typeof action._dataType>[0]\n    const signal = action as signalDataType\n    console.log(\"DEBUG: signal \" + JSON.stringify(action));\n\n    switch (action.signalName) {\n        case \"Ready\":\n            break;\n        case \"ArcFocus\":\n            console.debug(`focus arc: ${signal.arc}`)\n            newState.focusedArc = signal.arc\n            break;\n    }\n\n    (window as unknown as ContextContainer)._glamState = newState\n    return newState;\n}\n\nexport const SignalContext = React.createContext(null as unknown as [GlamAppState, Dispatch<any>])\n\nexport const GlamAppContextProvider: React.FC = (props) => {\n    const [state, dispatch] = useReducer(signalReducer, new GlamAppState())\n\n    return (\n        <SignalContext.Provider value={[state, dispatch]}>\n        {props.children}\n    </SignalContext.Provider>)\n}\n","import AsciiMathParser from \"./AsciiMathParser\";\nimport {ProtofunctionType} from \"./ProtofunctionContext\";\nimport sha1 from \"crypto-js/sha1\";\nimport {ptr} from \"./GlamCore\";\n\ninterface AMExpression {\n    tex: string\n    pos: number\n    end: number\n    ttype: string\n    exprs?: AMExpression[]\n    op?: AMExactExpression\n    arg?: AMExpression\n    dash?: {token: string, ttype: string}\n}\n\ninterface AMBracketExpression extends AMExpression {\n    left: AMExpression\n    middle: AMExpression\n    right: AMExpression\n}\n\ninterface AMExactExpression extends AMExpression {\n    token: string\n}\n\ninterface AMSubSupExpression extends AMExpression {\n    sub?: AMExpression\n    sup?: AMExpression\n}\n\ninterface AMIntermediateExpression extends AMExpression {\n    expression: AMExpression\n    subsup?: AMSubSupExpression // or something else?\n}\n\ninterface AMFractionExpression extends AMExpression {\n    numerator: AMExpression\n    denominator: AMExpression\n}\n\nenum StackObjectType {\n    NUMBER,\n    IDENTIFIER,\n    OPERATOR\n}\n\nexport interface StackObject {\n    value: string | ptr\n    type: StackObjectType\n    params?: number\n}\n\nexport interface ExpressionVisitor {\n    visit(expr: AMExpression): void\n}\n\nexport class FunctionDeclarationVisitor implements ExpressionVisitor {\n    parser: ExpressionParser\n\n    constructor(_parser: ExpressionParser) {\n        this.parser = _parser\n\n    }\n\n    visit(expr: AMExpression): AMExpression | null {\n        if (this.parser.functionName || this.parser.functionArg) {\n            this.parser.abort(\"duplicate function definition\")\n            return null\n        }\n\n        if (expr.ttype.startsWith(\"expression\") && expr.exprs && expr.exprs.length === 1) {\n            return this.visit(expr.exprs[0])\n        }\n\n        if (!expr.exprs || expr.exprs.length < 2) {\n            this.parser.abort(\"empty equation\")\n            return null\n        }\n\n        if (expr.exprs![0].ttype === \"unary\") { // special-cased for `f` and `g` for some reason\n            const unaryExpr = expr.exprs![0]\n            const rhsExpr = expr.exprs![1]\n            if (unaryExpr.arg && unaryExpr.arg.ttype === \"bracket\") {\n                if (rhsExpr.exprs && rhsExpr.exprs.length === 2 && rhsExpr.exprs[0].tex === \"=\") {\n                    this.parser.functionArg = (unaryExpr.arg as AMBracketExpression).middle.tex\n                    this.parser.functionName = unaryExpr.op!.token // unary type should guarantee this exists\n                    return rhsExpr.exprs[1]\n                }\n            }\n        } else if (expr.ttype === \"expression\") {\n            if (expr.exprs && expr.exprs.length === 2) {\n                const nameExpr = expr.exprs[0]\n                const rightExpr = expr.exprs[1]\n                if (nameExpr.ttype === \"literal\" || nameExpr.ttype === \"greek\") {\n                    if (rightExpr.exprs && rightExpr.exprs.length === 2) {\n                        const argExpr = rightExpr.exprs[0]\n                        const rhsExpr = rightExpr.exprs[1]\n                        if (argExpr.ttype === \"bracket\" && rhsExpr.exprs && rhsExpr.exprs.length === 2 && rhsExpr.exprs[0].tex === \"=\") {\n                            this.parser.functionName = nameExpr.tex\n                            this.parser.functionArg = (argExpr as AMBracketExpression).middle.tex\n                            return rhsExpr.exprs[1]\n                        }\n                    }\n                } else {\n                    this.parser.abort(\"illegal function name\")\n                    return null\n                }\n            }\n        }\n        this.parser.abort(\"unable to find function declaration\")\n        return null\n    }\n}\n\nexport class FunctionDefinitionVisitor implements ExpressionVisitor {\n    parser: ExpressionParser\n    parent: ExpressionVisitor\n    amParser = new AsciiMathParser()\n\n    constructor(_parser: ExpressionParser, _parent: ExpressionVisitor) {\n        this.parser = _parser\n        this.parent = _parent\n    }\n\n    visit(expr: AMExpression): void {\n        if (expr.ttype.startsWith(\"expression\") && expr.exprs) {\n            if (expr.exprs.length === 1) {\n                this.visit(expr.exprs[0])\n                return\n            } else if (expr.exprs.length === 2) {\n                if (expr.exprs[0].ttype === \"arbitrary_constant\") {\n                    this.visit(expr.exprs[1])\n                    this.visitObject({type: StackObjectType.OPERATOR, value: this.morphemeFromSymbol(expr.exprs[0].tex)}) // todo this is wrong\n                    return\n                }\n            }\n        }\n\n        if (expr.dash) {\n            this.visit((expr as AMIntermediateExpression).expression)\n            this.visitLiteral(\"-1\")\n            this.visitObject({type: StackObjectType.OPERATOR, value: Module._jit_morpheme_mul, params: 2})\n            return\n        }\n\n        if (expr.ttype === \"fraction\") {\n            const fractionExpr = expr as AMFractionExpression\n            if (fractionExpr.numerator && fractionExpr.denominator) {\n                this.visitFractionPart(fractionExpr.numerator)\n                this.visitFractionPart(fractionExpr.denominator)\n                this.visitObject({type: StackObjectType.OPERATOR, value: Module._jit_morpheme_div, params: 2})\n            }\n            return\n        }\n\n        if ((expr.ttype === \"literal\" || expr.ttype === \"greek\") && (!expr.exprs || expr.exprs.length === 0)) {\n            // we're at the end of a branch\n            this.visitLiteral(expr.tex)\n            return\n        }\n\n        if (expr.ttype === \"intermediate\") {\n            const intermediate = expr as AMIntermediateExpression\n            this.visitSubsup(intermediate)\n            return\n        }\n\n        if (expr.ttype === \"bracket\") {\n            const bracketExpr = expr as AMBracketExpression\n            if (!bracketExpr.left || !bracketExpr.right || !bracketExpr.middle) {\n                this.parser.abort(\"incomplete bracket expression\")\n                return\n            }\n\n            if (bracketExpr.left.tex === \"(\" && bracketExpr.right.tex === \")\") {\n                this.visit(bracketExpr.middle)\n                return\n            } else {\n                this.parser.abort(\"unrecognized bracket type\")\n                return\n            }\n        }\n\n        if (expr.exprs && expr.exprs.length === 2) {\n            this.visitBranch(expr)\n            return\n        }\n\n        if (expr.ttype === \"unary\") {\n            this.visitUnaryOperation(expr)\n            return\n        }\n    }\n\n    visitBranch(expr: AMExpression) {\n        if (!expr.exprs || expr.exprs.length < 2) {\n            this.parser.abort(\"not a branch expression\")\n            return\n        }\n\n        const leftExpr = expr.exprs[0]\n        const rightExpr = expr.exprs[1]\n\n        if (leftExpr.ttype === \"literal\" || leftExpr.ttype === \"intermediate\" || leftExpr.ttype === \"bracket\" || leftExpr.ttype === \"fraction\" || leftExpr.ttype === \"greek\") {\n            if (rightExpr.ttype === \"expression\") {\n                if (rightExpr.exprs![1].tex.startsWith(\"+\") || rightExpr.exprs![1].tex.startsWith(\"-\")) {\n                    this.visitBinaryOperation(leftExpr, Module._jit_morpheme_mul, rightExpr.exprs![0])\n                    this.visit(rightExpr.exprs![1])\n                    return\n                }\n            } else if (rightExpr.ttype === \"negative_expression\") {\n                this.visitBinaryOperation(leftExpr, Module._jit_morpheme_sub, (rightExpr as AMIntermediateExpression).expression)\n                return\n            }\n\n            if ((leftExpr.ttype === \"literal\" || leftExpr.ttype === \"greek\") && rightExpr.tex === \"i\") {\n                if (isNaN(parseFloat(leftExpr.tex))) {\n                    this.visitObject({type: StackObjectType.IDENTIFIER, value: leftExpr.tex})\n                    this.visitLiteral(\"i\")\n                    this.visitObject({type: StackObjectType.OPERATOR, value: Module._jit_morpheme_mul, params: 2})\n                } else {\n                    this.visitLiteral(leftExpr.tex)\n                    this.visitLiteral(\"i\")\n                    this.visitObject({type: StackObjectType.OPERATOR, value: Module._jit_morpheme_mul, params: 2})\n                }\n                return\n            }\n            if (rightExpr.exprs && rightExpr.exprs.length === 2) {\n                if (rightExpr.exprs[0].ttype === \"arbitrary_constant\") {\n                    this.visitBinaryOperation(leftExpr, this.morphemeFromSymbol(rightExpr.exprs[0].tex), rightExpr.exprs[1])\n                    return\n                }\n            }\n\n            // two terms adjacent for implied multiplication\n            this.visitBinaryOperation(leftExpr, Module._jit_morpheme_mul, rightExpr)\n            return\n        }\n    }\n\n    morphemeFromSymbol(operator: string): ptr {\n        switch (operator) {\n            case \"+\":\n                return Module._jit_morpheme_add\n            case \"-\":\n                return Module._jit_morpheme_sub\n            case \"\\\\cdot\":\n                return Module._jit_morpheme_mul\n            case \"/\":\n                return Module._jit_morpheme_div\n            case \"sin\":\n                return Module._jit_morpheme_sin\n            case \"cos\":\n                return Module._jit_morpheme_cos\n            case \"tan\":\n                return Module._jit_morpheme_tan\n            case \"sinh\":\n                return Module._jit_morpheme_sinh\n            case \"cosh\":\n                return Module._jit_morpheme_cosh\n            case \"tanh\":\n                return Module._jit_morpheme_tanh\n            default:\n                this.parser.abort(\"unrecognized operator \" + operator);\n                return 0\n        }\n    }\n\n    visitBinaryOperation(leftExpr: AMExpression, morpheme: ptr, rightExpr: AMExpression) {\n        this.visit(leftExpr)\n        this.visit(rightExpr)\n        this.visitObject({type: StackObjectType.OPERATOR, value: morpheme, params: 2})\n    }\n\n    visitUnaryOperation(expr: AMExpression) {\n        if (!expr.arg || !expr.op) {\n            this.parser.abort(\"not a unary operation\")\n            return\n        }\n        this.visit(expr.arg)\n        this.visitObject({type: StackObjectType.OPERATOR, value: this.morphemeFromSymbol(expr.op.token), params: 1})\n    }\n\n    visitLiteral(literal: string) {\n        if (isNaN(parseFloat(literal))) {\n            this.visitObject({type: StackObjectType.IDENTIFIER, value: literal})\n        } else {\n            this.visitObject({type: StackObjectType.NUMBER, value: literal})\n        }\n    }\n\n    visitSubsup(expr: AMIntermediateExpression) {\n        if (!expr.subsup) {\n            this.parser.abort(\"not a subscript/superscript expression\")\n            return\n        }\n\n        // todo check for integrals and sums here\n\n        if (expr.subsup.sup) { // exponentiation\n            this.visit(expr.expression)\n\n            const exponent = expr.subsup.sup.tex.replace(\"{\", \"\").replace(\"}\", \"\") // we need to parse this again\n            this.amParser.input(exponent)\n            const parseResult = this.amParser.consume() as AMExpression\n            if (parseResult && parseResult.exprs && parseResult.exprs[0]) {\n                this.visit(parseResult.exprs[0])\n                this.visitObject({type: StackObjectType.OPERATOR, value: Module._jit_morpheme_exp})\n            } else {\n                this.parser.abort(\"incomplete superscript\")\n                return\n            }\n        } else if (expr.subsup.sub) {\n            if (expr.expression.ttype === \"literal\") {\n                this.visitLiteral(expr.expression.tex + \"_\" + expr.subsup.sub!.tex)\n                return\n            } else {\n                this.parser.abort(\"illegal subscript\")\n                return\n            }\n        }\n    }\n\n    visitFractionPart(expr: AMExpression) {\n        if (expr.ttype && expr.ttype === \"literal\") {\n            this.visit(expr)\n        } else {\n            this.amParser.input(expr.tex)\n            const parseResult = this.amParser.consume()\n            if (parseResult && parseResult.exprs && parseResult.exprs[0]) {\n                this.visit(parseResult.exprs[0])\n            } else {\n                this.parser.abort(\"incomplete fraction\")\n                return\n            }\n        }\n\n    }\n\n    visitObject(object: StackObject) {\n        this.parser.stack.push(object)\n    }\n}\n\nexport class ExpressionParser implements ExpressionVisitor {\n    functionName?: string\n    functionArg?: string\n    stack: StackObject[] = []\n    error?: string\n    type?: ProtofunctionType = ProtofunctionType.R2C\n\n    visit(expr: AMExpression): void {\n        const declarationVisitor = new FunctionDeclarationVisitor(this)\n        const definitionExpr = declarationVisitor.visit(expr)\n        const definitionVisitor = new FunctionDefinitionVisitor(this, this)\n        if (definitionExpr) {\n            definitionVisitor.visit(definitionExpr)\n        }\n    }\n\n    abort(error: string) {\n        this.stack = []\n        this.error = error\n    }\n\n    generateFunctionName() {\n        const raw = this.type + \"_\" + this.functionName + \"_\" + this.functionArg + this.stack.map(obj => obj.type + \":\" + obj.value).join(\"_\")\n        return \"__jit_\" + sha1(raw).toString().substr(0, 16)\n    }\n}\n","export default class AsciiMathParser {\n    constructor() {\n        this.decimalsign = '\\\\.';\n\n        this.setup_symbols();\n        this.sort_symbols();\n    }\n\n    setup_symbols() {\n        this.greek_letters = ['alpha', 'beta', 'gamma', 'Gamma', 'delta', 'Delta', 'epsilon', 'varepsilon', 'zeta', 'eta', 'theta', 'Theta', 'vartheta', 'iota', 'kappa', 'lambda', 'Lambda', 'mu', 'nu', 'xi', 'Xi', 'pi', 'Pi', 'rho', 'sigma', 'Sigma', 'tau', 'upsilon', 'phi', 'Phi', 'varphi', 'chi', 'psi', 'Psi', 'omega', 'Omega'];\n\n        this.relations = [\n            {\"asciimath\":\":=\",\"tex\":\":=\"},\n            {\"asciimath\":\":|:\",\"tex\":\"\\\\|\"},\n            {\"asciimath\":\"=>\",\"tex\":\"\\\\Rightarrow\"},\n            {\"asciimath\":\"approx\",\"tex\":\"\\\\approx\"},\n            {\"asciimath\":\"~~\",\"tex\":\"\\\\approx\"},\n            {\"asciimath\":\"cong\",\"tex\":\"\\\\cong\"},\n            {\"asciimath\":\"~=\",\"tex\":\"\\\\cong\"},\n            {\"asciimath\":\"equiv\",\"tex\":\"\\\\equiv\"},\n            {\"asciimath\":\"-=\",\"tex\":\"\\\\equiv\"},\n            {\"asciimath\":\"exists\",\"tex\":\"\\\\exists\"},\n            {\"asciimath\":\"EE\",\"tex\":\"\\\\exists\"},\n            {\"asciimath\":\"forall\",\"tex\":\"\\\\forall\"},\n            {\"asciimath\":\"AA\",\"tex\":\"\\\\forall\"},\n            {\"asciimath\":\">=\",\"tex\":\"\\\\ge\"},\n            {\"asciimath\":\"ge\",\"tex\":\"\\\\ge\"},\n            {\"asciimath\":\"gt=\",\"tex\":\"\\\\geq\"},\n            {\"asciimath\":\"geq\",\"tex\":\"\\\\geq\"},\n            {\"asciimath\":\"gt\",\"tex\":\"\\\\gt\"},\n            {\"asciimath\":\"in\",\"tex\":\"\\\\in\"},\n            {\"asciimath\":\"<=\",\"tex\":\"\\\\le\"},\n            {\"asciimath\":\"le\",\"tex\":\"\\\\le\"},\n            {\"asciimath\":\"lt=\",\"tex\":\"\\\\leq\"},\n            {\"asciimath\":\"leq\",\"tex\":\"\\\\leq\"},\n            {\"asciimath\":\"lt\",\"tex\":\"\\\\lt\"},\n            {\"asciimath\":\"models\",\"tex\":\"\\\\models\"},\n            {\"asciimath\":\"|==\",\"tex\":\"\\\\models\"},\n            {\"asciimath\":\"!=\",\"tex\":\"\\\\ne\"},\n            {\"asciimath\":\"ne\",\"tex\":\"\\\\ne\"},\n            {\"asciimath\":\"notin\",\"tex\":\"\\\\notin\"},\n            {\"asciimath\":\"!in\",\"tex\":\"\\\\notin\"},\n            {\"asciimath\":\"prec\",\"tex\":\"\\\\prec\"},\n            {\"asciimath\":\"-lt\",\"tex\":\"\\\\prec\"},\n            {\"asciimath\":\"-<\",\"tex\":\"\\\\prec\"},\n            {\"asciimath\":\"preceq\",\"tex\":\"\\\\preceq\"},\n            {\"asciimath\":\"-<=\",\"tex\":\"\\\\preceq\"},\n            {\"asciimath\":\"propto\",\"tex\":\"\\\\propto\"},\n            {\"asciimath\":\"prop\",\"tex\":\"\\\\propto\"},\n            {\"asciimath\":\"subset\",\"tex\":\"\\\\subset\"},\n            {\"asciimath\":\"sub\",\"tex\":\"\\\\subset\"},\n            {\"asciimath\":\"subseteq\",\"tex\":\"\\\\subseteq\"},\n            {\"asciimath\":\"sube\",\"tex\":\"\\\\subseteq\"},\n            {\"asciimath\":\"succ\",\"tex\":\"\\\\succ\"},\n            {\"asciimath\":\">-\",\"tex\":\"\\\\succ\"},\n            {\"asciimath\":\"succeq\",\"tex\":\"\\\\succeq\"},\n            {\"asciimath\":\">-=\",\"tex\":\"\\\\succeq\"},\n            {\"asciimath\":\"supset\",\"tex\":\"\\\\supset\"},\n            {\"asciimath\":\"sup\",\"tex\":\"\\\\supset\"},\n            {\"asciimath\":\"supseteq\",\"tex\":\"\\\\supseteq\"},\n            {\"asciimath\":\"supe\",\"tex\":\"\\\\supseteq\"},\n            {\"asciimath\":\"vdash\",\"tex\":\"\\\\vdash\"},\n            {\"asciimath\":\"|--\",\"tex\":\"\\\\vdash\"},\n        ]\n\n        this.constants = [\n            {\"asciimath\":\"dt\",\"tex\":\"dt\"},\n            {\"asciimath\":\"dx\",\"tex\":\"dx\"},\n            {\"asciimath\":\"dy\",\"tex\":\"dy\"},\n            {\"asciimath\":\"dz\",\"tex\":\"dz\"},\n            {\"asciimath\":\"prime\",\"tex\":\"'\"},\n            {\"asciimath\":\"implies\",\"tex\":\"\\\\implies\"},\n            {\"asciimath\":\"epsi\",\"tex\":\"\\\\epsilon\"},\n            {\"asciimath\":\"leftrightarrow\",\"tex\":\"\\\\leftrightarrow\"},\n            {\"asciimath\":\"Leftrightarrow\",\"tex\":\"\\\\Leftrightarrow\"},\n            {\"asciimath\":\"rightarrow\",\"tex\":\"\\\\rightarrow\"},\n            {\"asciimath\":\"Rightarrow\",\"tex\":\"\\\\Rightarrow\"},\n            {\"asciimath\":\"backslash\",\"tex\":\"\\\\backslash\"},\n            {\"asciimath\":\"leftarrow\",\"tex\":\"\\\\leftarrow\"},\n            {\"asciimath\":\"Leftarrow\",\"tex\":\"\\\\Leftarrow\"},\n            {\"asciimath\":\"setminus\",\"tex\":\"\\\\setminus\"},\n            {\"asciimath\":\"bigwedge\",\"tex\":\"\\\\bigwedge\"},\n            {\"asciimath\":\"diamond\",\"tex\":\"\\\\diamond\"},\n            {\"asciimath\":\"bowtie\",\"tex\":\"\\\\bowtie\"},\n            {\"asciimath\":\"bigvee\",\"tex\":\"\\\\bigvee\"},\n            {\"asciimath\":\"bigcap\",\"tex\":\"\\\\bigcap\"},\n            {\"asciimath\":\"bigcup\",\"tex\":\"\\\\bigcup\"},\n            {\"asciimath\":\"square\",\"tex\":\"\\\\square\"},\n            {\"asciimath\":\"lamda\",\"tex\":\"\\\\lambda\"},\n            {\"asciimath\":\"Lamda\",\"tex\":\"\\\\Lambda\"},\n            {\"asciimath\":\"aleph\",\"tex\":\"\\\\aleph\"},\n            {\"asciimath\":\"angle\",\"tex\":\"\\\\angle\"},\n            {\"asciimath\":\"frown\",\"tex\":\"\\\\frown\"},\n            {\"asciimath\":\"qquad\",\"tex\":\"\\\\qquad\"},\n            {\"asciimath\":\"cdots\",\"tex\":\"\\\\cdots\"},\n            {\"asciimath\":\"vdots\",\"tex\":\"\\\\vdots\"},\n            {\"asciimath\":\"ddots\",\"tex\":\"\\\\ddots\"},\n            {\"asciimath\":\"cdot\",\"tex\":\"\\\\cdot\"},\n            {\"asciimath\":\"star\",\"tex\":\"\\\\star\"},\n            {\"asciimath\":\"|><|\",\"tex\":\"\\\\bowtie\"},\n            {\"asciimath\":\"circ\",\"tex\":\"\\\\circ\"},\n            {\"asciimath\":\"oint\",\"tex\":\"\\\\oint\"},\n            {\"asciimath\":\"grad\",\"tex\":\"\\\\nabla\"},\n            {\"asciimath\":\"quad\",\"tex\":\"\\\\quad\"},\n            {\"asciimath\":\"uarr\",\"tex\":\"\\\\uparrow\"},\n            {\"asciimath\":\"darr\",\"tex\":\"\\\\downarrow\"},\n            {\"asciimath\":\"downarrow\",\"tex\":\"\\\\downarrow\"},\n            {\"asciimath\":\"rarr\",\"tex\":\"\\\\rightarrow\"},\n            {\"asciimath\":\">->>\",\"tex\":\"\\\\twoheadrightarrowtail\"},\n            {\"asciimath\":\"larr\",\"tex\":\"\\\\leftarrow\"},\n            {\"asciimath\":\"harr\",\"tex\":\"\\\\leftrightarrow\"},\n            {\"asciimath\":\"rArr\",\"tex\":\"\\\\Rightarrow\"},\n            {\"asciimath\":\"lArr\",\"tex\":\"\\\\Leftarrow\"},\n            {\"asciimath\":\"hArr\",\"tex\":\"\\\\Leftrightarrow\"},\n            {\"asciimath\":\"ast\",\"tex\":\"\\\\ast\"},\n            {\"asciimath\":\"***\",\"tex\":\"\\\\star\"},\n            {\"asciimath\":\"|><\",\"tex\":\"\\\\ltimes\"},\n            {\"asciimath\":\"><|\",\"tex\":\"\\\\rtimes\"},\n            {\"asciimath\":\"^^^\",\"tex\":\"\\\\bigwedge\"},\n            {\"asciimath\":\"vvv\",\"tex\":\"\\\\bigvee\"},\n            {\"asciimath\":\"cap\",\"tex\":\"\\\\cap\"},\n            {\"asciimath\":\"nnn\",\"tex\":\"\\\\bigcap\"},\n            {\"asciimath\":\"cup\",\"tex\":\"\\\\cup\"},\n            {\"asciimath\":\"uuu\",\"tex\":\"\\\\bigcup\"},\n            {\"asciimath\":\"not\",\"tex\":\"\\\\neg\"},\n            {\"asciimath\":\"<=>\",\"tex\":\"\\\\Leftrightarrow\"},\n            {\"asciimath\":\"_|_\",\"tex\":\"\\\\bot\"},\n            {\"asciimath\":\"bot\",\"tex\":\"\\\\bot\"},\n            {\"asciimath\":\"int\",\"tex\":\"\\\\int\"},\n            {\"asciimath\":\"del\",\"tex\":\"\\\\partial\"},\n            {\"asciimath\":\"...\",\"tex\":\"\\\\ldots\"},\n            {\"asciimath\":\"/_\\\\\",\"tex\":\"\\\\triangle\"},\n            {\"asciimath\":\"|__\",\"tex\":\"\\\\lfloor\"},\n            {\"asciimath\":\"__|\",\"tex\":\"\\\\rfloor\"},\n            {\"asciimath\":\"dim\",\"tex\":\"\\\\dim\"},\n            {\"asciimath\":\"mod\",\"tex\":\"\\\\operatorname{mod}\"},\n            {\"asciimath\":\"lub\",\"tex\":\"\\\\operatorname{lub}\"},\n            {\"asciimath\":\"glb\",\"tex\":\"\\\\operatorname{glb}\"},\n            {\"asciimath\":\">->\",\"tex\":\"\\\\rightarrowtail\"},\n            {\"asciimath\":\"->>\",\"tex\":\"\\\\twoheadrightarrow\"},\n            {\"asciimath\":\"|->\",\"tex\":\"\\\\mapsto\"},\n            {\"asciimath\":\"lim\",\"tex\":\"\\\\lim\"},\n            {\"asciimath\":\"Lim\",\"tex\":\"\\\\operatorname{Lim}\"},\n            {\"asciimath\":\"and\",\"tex\":\"\\\\quad\\\\text{and}\\\\quad\"},\n            {\"asciimath\":\"**\",\"tex\":\"\\\\ast\"},\n            {\"asciimath\":\"//\",\"tex\":\"/\"},\n            {\"asciimath\":\"\\\\\",\"tex\":\"\\\\,\"},\n            {\"asciimath\":\"\\\\\\\\\",\"tex\":\"\\\\backslash\"},\n            {\"asciimath\":\"xx\",\"tex\":\"\\\\times\"},\n            {\"asciimath\":\"-:\",\"tex\":\"\\\\div\"},\n            {\"asciimath\":\"o+\",\"tex\":\"\\\\oplus\"},\n            {\"asciimath\":\"ox\",\"tex\":\"\\\\otimes\"},\n            {\"asciimath\":\"o.\",\"tex\":\"\\\\odot\"},\n            {\"asciimath\":\"^\",\"tex\":\"\\\\hat{}\"},\n            {\"asciimath\":\"_\",\"tex\":\"\\\\_\"},\n            {\"asciimath\":\"^^\",\"tex\":\"\\\\wedge\"},\n            {\"asciimath\":\"vv\",\"tex\":\"\\\\vee\"},\n            {\"asciimath\":\"nn\",\"tex\":\"\\\\cap\"},\n            {\"asciimath\":\"uu\",\"tex\":\"\\\\cup\"},\n            {\"asciimath\":\"TT\",\"tex\":\"\\\\top\"},\n            {\"asciimath\":\"+-\",\"tex\":\"\\\\pm\"},\n            {\"asciimath\":\"O/\",\"tex\":\"\\\\emptyset\"},\n            {\"asciimath\":\"oo\",\"tex\":\"\\\\infty\"},\n            {\"asciimath\":\":.\",\"tex\":\"\\\\therefore\"},\n            {\"asciimath\":\":'\",\"tex\":\"\\\\because\"},\n            {\"asciimath\":\"/_\",\"tex\":\"\\\\angle\"},\n            {\"asciimath\":\"|~\",\"tex\":\"\\\\lceil\"},\n            {\"asciimath\":\"~|\",\"tex\":\"\\\\rceil\"},\n            {\"asciimath\":\"CC\",\"tex\":\"\\\\mathbb{C}\"},\n            {\"asciimath\":\"NN\",\"tex\":\"\\\\mathbb{N}\"},\n            {\"asciimath\":\"QQ\",\"tex\":\"\\\\mathbb{Q}\"},\n            {\"asciimath\":\"RR\",\"tex\":\"\\\\mathbb{R}\"},\n            {\"asciimath\":\"ZZ\",\"tex\":\"\\\\mathbb{Z}\"},\n            {\"asciimath\":\"->\",\"tex\":\"\\\\to\"},\n            {\"asciimath\":\"or\",\"tex\":\"\\\\quad\\\\text{or}\\\\quad\"},\n            {\"asciimath\":\"if\",\"tex\":\"\\\\quad\\\\text{if}\\\\quad\"},\n            {\"asciimath\":\"iff\", \"tex\":\"\\\\iff\"},\n            {\"asciimath\":\"*\",\"tex\":\"\\\\cdot\"},\n            {\"asciimath\":\"@\",\"tex\":\"\\\\circ\"},\n            {\"asciimath\":\"%\",\"tex\":\"\\\\%\"},\n            {\"asciimath\":\"boxempty\",\"tex\":\"\\\\square\"},\n            {\"asciimath\":\"lambda\",\"tex\":\"\\\\lambda\"},\n            {\"asciimath\":\"Lambda\",\"tex\":\"\\\\Lambda\"},\n            {\"asciimath\":\"nabla\",\"tex\":\"\\\\nabla\"},\n            {\"asciimath\":\"uparrow\",\"tex\":\"\\\\uparrow\"},\n            {\"asciimath\":\"downarrow\",\"tex\":\"\\\\downarrow\"},\n            {\"asciimath\":\"twoheadrightarrowtail\",\"tex\":\"\\\\twoheadrightarrowtail\"},\n            {\"asciimath\":\"ltimes\",\"tex\":\"\\\\ltimes\"},\n            {\"asciimath\":\"rtimes\",\"tex\":\"\\\\rtimes\"},\n            {\"asciimath\":\"neg\",\"tex\":\"\\\\neg\"},\n            {\"asciimath\":\"partial\",\"tex\":\"\\\\partial\"},\n            {\"asciimath\":\"ldots\",\"tex\":\"\\\\ldots\"},\n            {\"asciimath\":\"triangle\",\"tex\":\"\\\\triangle\"},\n            {\"asciimath\":\"lfloor\",\"tex\":\"\\\\lfloor\"},\n            {\"asciimath\":\"rfloor\",\"tex\":\"\\\\rfloor\"},\n            {\"asciimath\":\"rightarrowtail\",\"tex\":\"\\\\rightarrowtail\"},\n            {\"asciimath\":\"twoheadrightarrow\",\"tex\":\"\\\\twoheadrightarrow\"},\n            {\"asciimath\":\"mapsto\",\"tex\":\"\\\\mapsto\"},\n            {\"asciimath\":\"times\",\"tex\":\"\\\\times\"},\n            {\"asciimath\":\"div\",\"tex\":\"\\\\div\"},\n            {\"asciimath\":\"divide\",\"tex\":\"\\\\div\"},\n            {\"asciimath\":\"oplus\",\"tex\":\"\\\\oplus\"},\n            {\"asciimath\":\"otimes\",\"tex\":\"\\\\otimes\"},\n            {\"asciimath\":\"odot\",\"tex\":\"\\\\odot\"},\n            {\"asciimath\":\"wedge\",\"tex\":\"\\\\wedge\"},\n            {\"asciimath\":\"vee\",\"tex\":\"\\\\vee\"},\n            {\"asciimath\":\"top\",\"tex\":\"\\\\top\"},\n            {\"asciimath\":\"pm\",\"tex\":\"\\\\pm\"},\n            {\"asciimath\":\"emptyset\",\"tex\":\"\\\\emptyset\"},\n            {\"asciimath\":\"infty\",\"tex\":\"\\\\infty\"},\n            {\"asciimath\":\"therefore\",\"tex\":\"\\\\therefore\"},\n            {\"asciimath\":\"because\",\"tex\":\"\\\\because\"},\n            {\"asciimath\":\"lceil\",\"tex\":\"\\\\lceil\"},\n            {\"asciimath\":\"rceil\",\"tex\":\"\\\\rceil\"},\n            {\"asciimath\":\"to\",\"tex\":\"\\\\to\"},\n            {\"asciimath\":\"langle\",\"tex\":\"\\\\langle\"},\n            {\"asciimath\":\"lceiling\",\"tex\":\"\\\\lceil\"},\n            {\"asciimath\":\"rceiling\",\"tex\":\"\\\\rceil\"},\n            {\"asciimath\":\"max\",\"tex\":\"\\\\max\"},\n            {\"asciimath\":\"min\",\"tex\":\"\\\\min\"},\n            {\"asciimath\":\"prod\",\"tex\":\"\\\\prod\"},\n            {\"asciimath\":\"sum\",\"tex\":\"\\\\sum\"},\n        ];\n        this.constants = this.constants.concat(this.relations);\n\n        this.left_brackets = [\n            {asciimath: 'langle', tex: '\\\\langle'},\n            {asciimath: '(:', tex: '\\\\langle'},\n            {asciimath: '<<', tex: '\\\\langle'},\n            {asciimath: '{:', tex: '.'},\n            {asciimath: '(', tex: '('},\n            {asciimath: '[', tex: '['},\n            {asciimath: '{', tex: '\\\\lbrace'},\n            {asciimath: 'lbrace', tex: '\\\\lbrace'},\n        ];\n        this.right_brackets = [\n            {asciimath: 'rangle', tex: '\\\\rangle'},\n            {asciimath: ':)', tex: '\\\\rangle'},\n            {asciimath: '>>', tex: '\\\\rangle'},\n            {asciimath: ':}', tex: '.', free_tex: ':\\\\}'},\n            {asciimath: ')', tex: ')'},\n            {asciimath: ']', tex: ']'},\n            {asciimath: '}', tex: '\\\\rbrace'},\n            {asciimath: 'rbrace', tex: '\\\\rbrace'},\n        ];\n        this.leftright_brackets = [\n            {asciimath: '|', left_tex: '\\\\lvert', right_tex: '\\\\rvert', free_tex: '|'},\n        ];\n\n        this.unary_symbols = [\n            {asciimath: \"sqrt\", tex: \"\\\\sqrt\"},\n            {asciimath: \"f\", tex:\"f\", func:true},\n            {asciimath: \"g\", tex:\"g\", func:true},\n            {asciimath: \"sin\", tex:\"\\\\sin\", func:true},\n            {asciimath: \"cos\", tex:\"\\\\cos\", func:true},\n            {asciimath: \"tan\", tex:\"\\\\tan\", func:true},\n            {asciimath: \"arcsin\", tex:\"\\\\arcsin\", func:true},\n            {asciimath: \"arccos\", tex:\"\\\\arccos\", func:true},\n            {asciimath: \"arctan\", tex:\"\\\\arctan\", func:true},\n            {asciimath: \"sinh\", tex:\"\\\\sinh\", func:true},\n            {asciimath: \"cosh\", tex:\"\\\\cosh\", func:true},\n            {asciimath: \"tanh\", tex:\"\\\\tanh\", func:true},\n            {asciimath: \"cot\", tex:\"\\\\cot\", func:true},\n            {asciimath: \"coth\", tex:\"\\\\coth\", func:true},\n            {asciimath: \"sech\", tex:\"\\\\operatorname{sech}\", func:true},\n            {asciimath: \"csch\", tex:\"\\\\operatorname{csch}\", func:true},\n            {asciimath: \"sec\", tex:\"\\\\sec\", func:true},\n            {asciimath: \"csc\", tex:\"\\\\csc\", func:true},\n            {asciimath: \"log\", tex:\"\\\\log\", func:true},\n            {asciimath: \"ln\", tex:\"\\\\ln\", func:true},\n            {asciimath: \"abs\", rewriteleftright:[\"|\",\"|\"]},\n            {asciimath: \"norm\", rewriteleftright:[\"\\\\|\",\"\\\\|\"]},\n            {asciimath: \"floor\", rewriteleftright:[\"\\\\lfloor\",\"\\\\rfloor\"]},\n            {asciimath: \"ceil\", rewriteleftright:[\"\\\\lceil\",\"\\\\rceil\"]},\n            {asciimath: \"Sin\", tex:\"\\\\Sin\", func:true},\n            {asciimath: \"Cos\", tex:\"\\\\Cos\", func:true},\n            {asciimath: \"Tan\", tex:\"\\\\Tan\", func:true},\n            {asciimath: \"Arcsin\", tex:\"\\\\Arcsin\", func:true},\n            {asciimath: \"Arccos\", tex:\"\\\\Arccos\", func:true},\n            {asciimath: \"Arctan\", tex:\"\\\\Arctan\", func:true},\n            {asciimath: \"Sinh\", tex:\"\\\\Sinh\", func:true},\n            {asciimath: \"Cosh\", tex:\"\\\\Cosh\", func:true},\n            {asciimath: \"Tanh\", tex:\"\\\\Tanh\", func:true},\n            {asciimath: \"Cot\", tex:\"\\\\Cot\", func:true},\n            {asciimath: \"Sec\", tex:\"\\\\Sec\", func:true},\n            {asciimath: \"Csc\", tex:\"\\\\Csc\", func:true},\n            {asciimath: \"Log\", tex:\"\\\\Log\", func:true},\n            {asciimath: \"Ln\", tex:\"\\\\Ln\", func:true},\n            {asciimath: \"Abs\", tex:\"\\\\Abs\", rewriteleftright:[\"|\",\"|\"]},\n            {asciimath: \"det\", tex:\"\\\\det\", func:true},\n            {asciimath: \"exp\", tex:\"\\\\exp\", func:true},\n            {asciimath: \"gcd\", tex:\"\\\\gcd\", func:true},\n            {asciimath:\"lcm\", tex:\"\\\\operatorname{lcm}\", func:true},\n            {asciimath: \"cancel\", tex:\"\\\\cancel\"},\n            {asciimath: \"Sqrt\", tex:\"\\\\Sqrt\"},\n            {asciimath: \"hat\", tex:\"\\\\hat\", acc:true},\n            {asciimath:\"bar\", tex:\"\\\\overline\", acc:true},\n            {asciimath:\"overline\", tex:\"\\\\overline\", acc:true},\n            {asciimath: \"vec\", tex:\"\\\\vec\", acc:true},\n            {asciimath: \"tilde\", tex:\"\\\\tilde\", acc:true},\n            {asciimath: \"dot\", tex:\"\\\\dot\", acc:true},\n            {asciimath: \"ddot\", tex:\"\\\\ddot\", acc:true},\n            {asciimath:\"ul\", tex:\"\\\\underline\", acc:true},\n            {asciimath:\"underline\", tex:\"\\\\underline\", acc:true},\n            {asciimath:\"ubrace\", tex:\"\\\\underbrace\", acc:true},\n            {asciimath:\"underbrace\", tex:\"\\\\underbrace\", acc:true},\n            {asciimath:\"obrace\", tex:\"\\\\overbrace\", acc:true},\n            {asciimath:\"overbrace\", tex:\"\\\\overbrace\", acc:true},\n            {asciimath:\"bb\", atname:\"mathvariant\", atval:\"bold\", tex:\"\\\\mathbf\"},\n            {asciimath: \"mathbf\", atname:\"mathvariant\", atval:\"bold\", tex:\"mathbf\"},\n            {asciimath:\"sf\", atname:\"mathvariant\", atval:\"sans-serif\", tex:\"\\\\mathsf\"},\n            {asciimath: \"mathsf\", atname:\"mathvariant\", atval:\"sans-serif\", tex:\"mathsf\"},\n            {asciimath:\"bbb\", atname:\"mathvariant\", atval:\"double-struck\", tex:\"\\\\mathbb\"},\n            {asciimath: \"mathbb\", atname:\"mathvariant\", atval:\"double-struck\", tex:\"\\\\mathbb\"},\n            {asciimath:\"cc\", atname:\"mathvariant\", atval:\"script\", tex:\"\\\\mathcal\"},\n            {asciimath: \"mathcal\", atname:\"mathvariant\", atval:\"script\", tex:\"\\\\mathcal\"},\n            {asciimath:\"tt\", atname:\"mathvariant\", atval:\"monospace\", tex:\"\\\\mathtt\"},\n            {asciimath: \"mathtt\", atname:\"mathvariant\", atval:\"monospace\", tex:\"\\\\mathtt\"},\n            {asciimath:\"fr\", atname:\"mathvariant\", atval:\"fraktur\", tex:\"\\\\mathfrak\"},\n            {asciimath: \"mathfrak\", atname:\"mathvariant\", atval:\"fraktur\", tex:\"\\\\mathfrak\"},\n        ];\n\n        this.binary_symbols = [\n            {asciimath: \"root\", tex:\"\\\\sqrt\", option: true},\n            {asciimath: \"frac\",    tex:\"\\\\frac\"},\n            {asciimath: \"stackrel\", tex:\"\\\\stackrel\"},\n            {asciimath: \"overset\", tex:\"\\\\overset\"},\n            {asciimath: \"underset\", tex:\"\\\\underset\"},\n            {asciimath:\"color\", tex: \"\\\\color\", rawfirst: true},\n        ]\n\n        this.non_constant_symbols = ['_','^','/'];\n\n    }\n\n    sort_symbols() {\n        // eslint-disable-next-line no-unused-expressions\n        const by_asciimath = (a,b)=>{a=a.asciimath.length,b=b.asciimath.length; return a>b ? -1 : a<b ? 1 : 0};\n        this.constants.sort(by_asciimath);\n        this.relations.sort(by_asciimath);\n        this.left_brackets.sort(by_asciimath);\n        this.right_brackets.sort(by_asciimath);\n        this.leftright_brackets.sort(by_asciimath);\n        this.unary_symbols.sort(by_asciimath);\n        this.binary_symbols.sort(by_asciimath);\n    }\n\n    error(message, pos) {\n        const neighbourhood = this.source(pos).slice(0,5);\n        throw(new Error(`Error at character ${pos} near \"${neighbourhood}\": ${message}`));\n    }\n\n    literal(token) {\n        if(token) {\n            return {tex: token.token, pos: token.pos, end: token.end, ttype: 'literal'};\n        }\n    }\n\n    longest(matches) {\n        matches = matches.filter(x=>!!x);\n        matches.sort((x,y)=>{\n            x=x.end;\n            y=y.end;\n            return x>y ? -1 : x<y ? 1 : 0;\n        });\n        return matches[0];\n    }\n\n    escape_text(str) {\n        return str\n            .replace(/\\{/g,'\\\\{')\n            .replace(/\\}/g,'\\\\}')\n            ;\n    }\n\n    input(str) {\n        this._source = str;\n        this.brackets = [];\n    }\n\n    source(pos = 0,end) {\n        if(arguments.length>1) {\n            return this._source.slice(pos,end);\n        } else {\n            return this._source.slice(pos);\n        }\n    }\n\n    eof(pos = 0) {\n        pos = this.strip_space(pos);\n        return pos == this._source.length;\n    }\n\n    unbracket(tok) {\n        if(!tok) {\n            return;\n        }\n        if(!tok.bracket) {\n            return tok;\n        }\n\n        const skip_brackets = ['(',')','[',']','{','}'];\n        const skipleft = skip_brackets.includes(tok.left.asciimath);\n        const skipright = skip_brackets.includes(tok.right.asciimath);\n        const pos = skipleft ? tok.left.end : tok.pos;\n        const end = skipright ? tok.right.pos : tok.end;\n        let left = skipleft ? '' : tok.left.tex;\n        let right = skipright ? '' : tok.right.tex;\n        const middle = tok.middle ? tok.middle.tex : '';\n        if(left || right) {\n            left = left || '.';\n            right = right || '.';\n            return {tex: `\\\\left ${left} ${middle} \\\\right ${right}`, pos: tok.pos, end: tok.end};\n        } else {\n            return {tex: middle, pos: tok.pos, end: tok.end, middle_asciimath: this.source(pos,end)};\n        }\n    }\n\n    parse(str) {\n        this.input(str);\n        const result = this.consume();\n        return result.tex;\n    }\n\n    consume(pos = 0) {\n        let tex = '';\n        const exprs = [];\n        while(!this.eof(pos)) {\n            let expr = this.expression_list(pos);\n            if(!expr) {\n                const rb = this.right_bracket(pos);\n                if(rb) {\n                    if(rb.def.free_tex) {\n                        rb.tex = rb.def.free_tex;\n                    }\n                    expr = rb;\n\n                }\n                const lr = this.leftright_bracket(pos);\n                if(lr) {\n                    expr = lr;\n                    const ss = this.subsup(lr.end);\n                    if(ss) {\n                        expr = {tex: `${expr.tex}${ss.tex}`, pos: pos, end: ss.end, ttype: 'expression'}\n                    }\n                }\n            }\n            if(expr) {\n                if(tex) {\n                    tex += ' ';\n                }\n                tex += expr.tex;\n                pos = expr.end;\n                exprs.push(expr);\n            } else if(!this.eof(pos)) {\n                const chr = this.source(pos,pos+1);\n                exprs.push({tex: chr, pos: pos, ttype: 'character'});\n                tex += chr;\n                pos += 1;\n            }\n        }\n        return {tex: tex, exprs: exprs};\n    }\n\n    strip_space(pos = 0) {\n        const osource = this.source(pos);\n        const reduced = osource.replace(/^(\\s|\\\\(?!\\\\))*/,'');\n        return pos + osource.length - reduced.length;\n    }\n\n    /* Does the given regex match next?\n     */\n    match(re, pos) {\n        pos = this.strip_space(pos);\n        const m = re.exec(this.source(pos));\n        if(m) {\n            const token = m[0];\n            return {token: token, pos: pos, match: m, end: pos+token.length, ttype: 'regex'};\n        }\n    }\n\n    /* Does the exact given string occur next?\n     */\n    exact(str, pos) {\n        pos = this.strip_space(pos);\n        if(this.source(pos).slice(0, str.length) == str) {\n            return {token: str, pos: pos, end: pos+str.length, ttype: 'exact'};\n        }\n    }\n\n    expression_list(pos = 0) {\n        let expr = this.expression(pos);\n        if(!expr) {\n            return;\n        }\n        let end = expr.end;\n        let tex = expr.tex;\n        let exprs = [expr];\n        while(!this.eof(end)) {\n            const comma = this.exact(\",\",end);\n            if(!comma) {\n                break;\n            }\n            tex += ' ,';\n            end = comma.end;\n            expr = this.expression(end);\n            if(!expr) {\n                break;\n            }\n            tex += ' '+expr.tex;\n            exprs.push(expr);\n            end = expr.end;\n        }\n        return {tex: tex, pos: pos, end: end, exprs: exprs, ttype: 'expression_list'};\n    }\n\n    // E ::= IE | I/I                       Expression\n    expression(pos = 0) {\n        const negative = this.negative_expression(pos);\n        if(negative) {\n            return negative;\n        }\n        const first = this.intermediate_or_fraction(pos);\n        if(!first) {\n            for(let c of this.non_constant_symbols) {\n                const m = this.exact(c,pos);\n                if(m) {\n                    return {tex: c, pos: pos, end: m.end, ttype: 'constant'};\n                }\n            }\n            return;\n        }\n        if(this.eof(first.end)) {\n            return first;\n        }\n        const second = this.expression(first.end);\n        if(second) {\n            return {tex: first.tex+' '+second.tex, pos: first.pos, end: second.end, ttype: 'expression', exprs: [first,second]};\n        } else {\n            return first;\n        }\n    }\n\n    negative_expression(pos = 0) {\n        const dash = this.exact(\"-\",pos);\n        if(dash && !this.other_constant(pos)) {\n            const expr = this.expression(dash.end);\n            if(expr) {\n                return {tex: `- ${expr.tex}`, pos: pos, end: expr.end, ttype: 'negative_expression', dash: dash, expression: expr}\n            } else {\n                return {tex: '-', pos: pos, end: dash.end, ttype: 'constant'};\n            }\n        }\n    }\n\n    intermediate_or_fraction(pos = 0) {\n        const first = this.intermediate(pos);\n        if(!first) {\n            return;\n        }\n        let frac = this.match(/^\\/(?!\\/)/,first.end);\n        if(frac) {\n            const second = this.intermediate(frac.end);\n            if(second) {\n                const ufirst = this.unbracket(first);\n                const usecond = this.unbracket(second);\n                return {tex: `\\\\frac{${ufirst.tex}}{${usecond.tex}}`, pos: first.pos, end: second.end, ttype: 'fraction', numerator: ufirst, denominator: usecond};\n            } else {\n                const ufirst = this.unbracket(first);\n                return {tex: `\\\\frac{${ufirst.tex}}{}`, pos: first.pos, end: frac.end, ttype: 'fraction', numerator: ufirst, denominator: null};\n            }\n        } else {\n            return first;\n        }\n    }\n\n    // I ::= S_S | S^S | S_S^S | S          Intermediate expression\n    intermediate(pos = 0) {\n        const first = this.simple(pos);\n        if(!first) {\n            return;\n        }\n        const ss = this.subsup(first.end);\n        if(ss) {\n            return {tex: `${first.tex}${ss.tex}`, pos:pos, end:ss.end, ttype: 'intermediate', expression: first, subsup: ss};\n        } else {\n            return first;\n        }\n    }\n\n    subsup(pos = 0) {\n        let tex = '';\n        let end = pos;\n        let sub = this.exact('_',pos);\n        let sub_expr, sup_expr;\n        if(sub) {\n            sub_expr = this.unbracket(this.simple(sub.end));\n            if(sub_expr) {\n                tex = `${tex}_{${sub_expr.tex}}`;\n                end = sub_expr.end;\n            } else {\n                tex = `${tex}_{}`;\n                end = sub.end;\n            }\n        }\n        let sup = this.match(/^\\^(?!\\^)/,end);\n        if(sup) {\n            sup_expr = this.unbracket(this.simple(sup.end));\n            if(sup_expr) {\n                tex = `${tex}^{${sup_expr.tex}}`;\n                end = sup_expr.end;\n            } else {\n                tex = `${tex}^{}`;\n                end = sup.end;\n            }\n        }\n        if(sub || sup) {\n            return {tex: tex, pos: pos, end: end, ttype: 'subsup', sub: sub_expr, sup: sup_expr};\n        }\n    }\n\n    // S ::= v | lEr | uS | bSS             Simple expression\n    simple(pos = 0) {\n        return this.longest([this.matrix(pos), this.bracketed_expression(pos), this.binary(pos), this.constant(pos), this.text(pos), this.unary(pos), this.negative_simple(pos)]);\n    }\n\n    negative_simple(pos = 0) {\n        const dash = this.exact(\"-\",pos);\n        if(dash && !this.other_constant(pos)) {\n            const expr = this.simple(dash.end);\n            if(expr) {\n                return {tex: `- ${expr.tex}`, pos: pos, end: expr.end, ttype: 'negative_simple', dash: dash, expr: expr}\n            } else {\n                return {tex: '-', pos: pos, end: dash.end, ttype: 'constant'};\n            }\n        }\n    }\n\n    // matrix: leftbracket \"(\" expr \")\" (\",\" \"(\" expr \")\")* rightbracket\n    // each row must have the same number of elements\n    matrix(pos = 0) {\n        let left = this.left_bracket(pos);\n        let lr = false;\n        if(!left) {\n            left = this.leftright_bracket(pos,'left');\n            if(!left) {\n                return;\n            }\n            lr = true;\n        }\n        const contents = this.matrix_contents(left.end, lr);\n        if(!contents) {\n            return;\n        }\n        const right = lr ? this.leftright_bracket(contents.end, 'right') : this.right_bracket(contents.end);\n        if(!right) {\n            return;\n        }\n        const contents_tex = contents.rows.map(r=>r.tex).join(' \\\\\\\\ ');\n        const matrix_tex = contents.is_array ? `\\\\begin{array}{${contents.column_desc}} ${contents_tex} \\\\end{array}` : `\\\\begin{matrix} ${contents_tex} \\\\end{matrix}`;\n        return {tex: `\\\\left ${left.tex} ${matrix_tex} \\\\right ${right.tex}`, pos: pos, end: right.end, ttype: 'matrix', rows: contents.rows, left: left, right: right};\n    }\n\n    matrix_contents(pos = 0, leftright = false) {\n        let rows = [];\n        let end = pos;\n        let row_length = undefined;\n        let column_desc = undefined;\n        let is_array = false;\n        while(!this.eof(end) && !(leftright ? this.leftright_bracket(end) : this.right_bracket(end))) {\n            if(rows.length) {\n                const comma = this.exact(\",\",end);\n                if(!comma) {\n                    return;\n                }\n                end = comma.end;\n            }\n            const lb = this.match(/^[(\\[]/,end);\n            if(!lb) {\n                return;\n            }\n\n            const cells = [];\n            const columns = [];\n            end = lb.end;\n            while(!this.eof(end)) {\n                if(cells.length) {\n                    const comma = this.exact(\",\",end);\n                    if(!comma) {\n                        break;\n                    }\n                    end = comma.end;\n                }\n                const cell = this.matrix_cell(end);\n                if(!cell) {\n                    break;\n                }\n                if(cell.ttype=='column') {\n                    columns.push('|');\n                    is_array = true;\n                    if(cell.expr!==null) {\n                        columns.push('r');\n                        cells.push(cell.expr);\n                    }\n                } else {\n                    columns.push('r');\n                    cells.push(cell);\n                }\n                end = cell.end;\n            }\n            if(!cells.length) {\n                return;\n            }\n            if(row_length===undefined) {\n                row_length = cells.length;\n            } else if(cells.length!=row_length) {\n                return;\n            }\n            const rb = this.match(/^[)\\]]/,end);\n            if(!rb) {\n                return;\n            }\n            const row_column_desc = columns.join('');\n            if(column_desc===undefined) {\n                column_desc = row_column_desc;\n            } else if(row_column_desc!=column_desc) {\n                return;\n            }\n            rows.push({ttype: 'row', tex: cells.map(c=>c.tex).join(' & '), pos: lb.end, end: end, cells: cells});\n            end = rb.end;\n        }\n        if(row_length===undefined || (row_length<=1 && rows.length<=1)) {\n            return;\n        }\n        return {rows: rows, end: end, column_desc: column_desc, is_array: is_array};\n    }\n\n    matrix_cell(pos = 0) {\n        const lvert = this.exact('|',pos);\n        if(lvert) {\n            const middle = this.expression(lvert.end);\n            if(middle) {\n                const rvert = this.exact('|',middle.end);\n                if(rvert) {\n                    const second = this.expression(rvert.end);\n                    if(second) {\n                        return {tex: `\\\\left \\\\lvert ${middle.tex} \\\\right \\\\rvert ${second.text}`, pos: lvert.pos, end: second.end, ttype: 'expression', exprs: [middle,second]};\n                    }\n                } else {\n                    return {ttype: 'column', expr: middle, pos: lvert.pos, end: middle.end};\n                }\n            } else {\n                return {ttype: 'column', expr: null, pos: lvert.pos, end: lvert.end}\n            }\n        }\n        return this.expression(pos);\n    }\n\n    bracketed_expression(pos = 0) {\n        const l = this.left_bracket(pos);\n        if(l) {\n            const middle = this.expression_list(l.end);\n            if(middle) {\n                const r = this.right_bracket(middle.end) || this.leftright_bracket(middle.end,'right');\n                if(r) {\n                    return {tex: `\\\\left${l.tex} ${middle.tex} \\\\right ${r.tex}`, pos: pos, end: r.end, bracket: true, left: l, right: r, middle: middle, ttype: 'bracket'};\n                } else if(this.eof(middle.end)) {\n                    return {tex: `\\\\left${l.tex} ${middle.tex} \\\\right.`, pos: pos, end: middle.end, ttype: 'bracket', left: l, right: null, middle: middle};\n                } else {\n                    return {tex: `${l.tex} ${middle.tex}`, pos: pos, end: middle.end, ttype: 'expression', exprs: [l,middle]};\n                }\n            } else {\n                const r = this.right_bracket(l.end) || this.leftright_bracket(l.end,'right');\n                if(r) {\n                    return {tex: `\\\\left ${l.tex} \\\\right ${r.tex}`, pos: pos, end: r.end, bracket: true, left: l, right: r, middle: null, ttype: 'bracket'};\n                } else {\n                    return {tex: l.tex, pos: pos, end: l.end, ttype: 'constant'};\n                }\n            }\n        }\n        if(this.other_constant(pos)) {\n            return;\n        }\n        const left = this.leftright_bracket(pos, 'left');\n        if(left) {\n            const middle = this.expression_list(left.end);\n            if(middle) {\n                const right = this.leftright_bracket(middle.end, 'right') || this.right_bracket(middle.end);\n                if(right) {\n                    return {tex: `\\\\left ${left.tex} ${middle.tex} \\\\right ${right.tex}`, pos: pos, end: right.end, bracket: true, left: left, right: right, middle: middle, ttype: 'bracket'};\n                }\n            }\n        }\n    }\n\n    // r ::= ) | ] | } | :) | :} | other right brackets\n    right_bracket(pos = 0) {\n        for(let bracket of this.right_brackets) {\n            const m = this.exact(bracket.asciimath,pos);\n            if(m) {\n                return {tex: bracket.tex, pos: pos, end: m.end, asciimath: bracket.asciimath, def: bracket, ttype: 'right_bracket'};\n            }\n        }\n    }\n\n    // l ::= ( | [ | { | (: | {: | other left brackets\n    left_bracket(pos = 0) {\n        for(let bracket of this.left_brackets) {\n            const m = this.exact(bracket.asciimath,pos);\n            if(m) {\n                return {tex: bracket.tex, pos: pos, end: m.end, asciimath: bracket.asciimath, ttype: 'left_bracket'};\n            }\n        }\n    }\n\n    leftright_bracket(pos = 0,position) {\n        for(let lr of this.leftright_brackets) {\n            const b = this.exact(lr.asciimath, pos);\n            if(b) {\n                return {tex: position=='left' ? lr.left_tex : position=='right' ? lr.right_tex : lr.free_tex, pos: pos, end: b.end, ttype: 'leftright_bracket'};\n            }\n        }\n    }\n\n    text(pos = 0) {\n        const quoted = this.match(/^\"([^\"]*)\"/,pos);\n        if(quoted) {\n            const text = this.escape_text(quoted.match[1]);\n            return {tex: `\\\\text{${text}}`, pos: pos, end: quoted.end, ttype: 'text', text: text};\n        }\n        const textfn = this.match(/^(?:mbox|text)\\s*(\\([^)]*\\)?|\\{[^}]*\\}?|\\[[^\\]]*\\]?)/,pos);\n        if(textfn) {\n            const text = this.escape_text(textfn.match[1].slice(1,textfn.match[1].length-1));\n            return {tex: `\\\\text{${text}}`, pos: pos, end: textfn.end, ttype: 'text', text: text};\n        }\n    }\n\n    // b ::= frac | root | stackrel | other binary symbols\n    binary(pos = 0) {\n        for(let binary of this.binary_symbols) {\n            const m = this.exact(binary.asciimath, pos);\n            const [lb1,rb1] = binary.option ? ['[',']'] : ['{','}'];\n            if(m) {\n                const a = this.unbracket(this.simple(m.end));\n                if(a) {\n                    const atex = binary.rawfirst ? a.middle_asciimath : a.tex;\n                    const b = this.unbracket(this.simple(a.end));\n                    if(b) {\n                        return {tex: `${binary.tex}${lb1}${atex}${rb1}{${b.tex}}`, pos: pos, end: b.end, ttype: 'binary', op: binary, arg1: a, arg2: b};\n                    } else {\n                        return {tex: `${binary.tex}${lb1}${atex}${rb1}{}`, pos: pos, end: a.end, ttype: 'binary', op: binary, arg1: a, arg2: null};\n                    }\n                } else {\n                    return {tex: `${binary.tex}${lb1}${rb1}{}`, pos: pos, end: m.end, ttype: 'binary', op: binary, arg1: null, arg2: null};\n                }\n            }\n        }\n    }\n\n    // u ::= sqrt | text | bb | other unary symbols for font commands\n    unary(pos = 0) {\n        for(let u of this.unary_symbols) {\n            const m = this.exact(u.asciimath, pos);\n            if(m) {\n                const ss = this.subsup(m.end);\n                const sstex = ss ? ss.tex : '';\n                const end = ss ? ss.end : m.end;\n                const barg = this.simple(end);\n                const arg = u.func ? barg : this.unbracket(barg);\n                const argtex = arg && (u.raw ? arg.middle_asciimath : arg.tex);\n                if(u.rewriteleftright) {\n                    const [left,right] = u.rewriteleftright;\n                    if(arg) {\n                        return {tex: `\\\\left ${left} ${argtex} \\\\right ${right} ${sstex}`, pos: pos, end: arg.end, ttype: 'unary', op: m, subsup: ss, arg: arg};\n                    } else {\n                        return {tex: `\\\\left ${left} \\\\right ${right} ${sstex}`, pos: pos, end: m.end, ttype: 'unary', op: m, subsup: ss, arg: null};\n                    }\n                } else {\n                    if(arg) {\n                        return {tex: `${u.tex}${sstex}{${argtex}}`, pos: pos, end: arg.end, ttype: 'unary', op: m, subsup: ss, arg: arg};\n                    } else {\n                        return {tex: `${u.tex}${sstex}{}`, pos: pos, end: m.end, ttype: 'unary', op: m, subsup: ss, arg: null};\n                    }\n                }\n            }\n        }\n    }\n\n    // v ::= [A-Za-z] | greek letters | numbers | other constant symbols\n    constant(pos = 0) {\n        if(this.right_bracket(pos)) {\n            return;\n        }\n        return this.longest([this.other_constant(pos), this.greek(pos), this.name(pos), this.number(pos), this.arbitrary_constant(pos)]);\n    }\n\n    name(pos = 0) {\n        return this.literal(this.match(/^[A-Za-z]/, pos));\n    }\n\n    greek(pos = 0) {\n        const re_greek = new RegExp('^('+this.greek_letters.join('|')+')');\n        const m = this.match(re_greek, pos);\n        if(m) {\n            return {tex: '\\\\'+m.token, pos: pos, end: m.end, ttype: 'greek'};\n        }\n    }\n\n    number(pos = 0) {\n        const re_number = new RegExp('^\\\\d+('+this.decimalsign+'\\\\d+)?');\n        return this.literal(this.match(re_number, pos));\n    }\n\n    other_constant(pos = 0) {\n        for(let sym of this.constants) {\n            let m = this.exact(sym.asciimath, pos);\n            if(m) {\n                return {tex: `${sym.tex}`, pos: m.pos, end: m.end, ttype: 'other_constant'};\n            }\n        }\n        for(let sym of this.relations) {\n            if(!sym.asciimath.match(/^!/)) {\n                let notm = this.exact('!'+sym.asciimath, pos);\n                if(notm) {\n                    return {tex: `\\\\not ${sym.tex}`, pos: notm.pos, end: notm.end, ttype: 'other_constant'};\n                }\n            }\n        }\n    }\n\n    arbitrary_constant(pos = 0) {\n        if(!this.eof(pos)) {\n            if(this.exact(\",\",pos)) {\n                return;\n            }\n            for(let nc of this.non_constant_symbols.concat(this.left_brackets.map(x=>x.asciimath), this.right_brackets.map(x=>x.asciimath), this.leftright_brackets.map(x=>x.asciimath))) {\n                if(this.exact(nc, pos)) {\n                    return;\n                }\n            }\n            const spos = this.strip_space(pos);\n            const symbol = this.source(spos).slice(0,1);\n            return {tex: symbol, pos: pos, end: spos+1, ttype: 'arbitrary_constant'};\n        }\n    }\n}\n","import {Classes, Dialog, Tab, Tabs} from \"@blueprintjs/core\";\nimport React, {useMemo} from \"react\";\nimport {useProtofunction} from \"../ProtofunctionContext\";\nimport \"./InfoDialog.css\"\n\ninterface InfoDialogProps {\n    isOpen: boolean\n    closeCallback: () => void;\n    pfId: number\n}\n\nexport const InfoDialog: React.FC<InfoDialogProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n    const disassembly = useMemo(() => {\n        if (pf.jitFunction) {\n            const mod = Module.ccall(\"BinaryenModuleRead\", \"number\", [\"number\", \"number\"],\n                [pf.jitFunction.getModule(), pf.jitFunction.getModuleLen()])\n            const ptr = ccall(\"BinaryenModuleAllocateAndWriteText\", \"number\", [\"number\"], [mod])\n            const disassembly = UTF8ToString(ptr)\n            Module._free(ptr)\n            ccall(\"BinaryenModuleDispose\", null, [\"number\"], [mod])\n            return disassembly\n        } else {\n            return \"module is not compiled!\"\n        }\n    }, [pf.jitFunction])\n\n    return <Dialog className=\"bp3-dark info-dialog\" title={`${pf.id}: ${pf.name}(${pf.parameterName})`} isOpen={props.isOpen} onClose={props.closeCallback}>\n        <Tabs id=\"InfoTabs\" className={Classes.DIALOG_BODY} vertical={true}>\n            <Tab id=\"disassembly\" title=\"Disassembly\" panel={<div className={Classes.CODE_BLOCK} >\n                    <pre>{disassembly}</pre>\n                </div>}/>\n        </Tabs>\n    </Dialog>\n}","import {Colors} from \"@blueprintjs/core\";\n\nexport const NewPointIcon = <svg width={16} height={16} viewBox=\"0 0 16 16\">\n    <desc>new-point</desc>\n    <circle cx=\"50%\" cy=\"50%\" r={6} fill={Colors.GREEN5}/>\n</svg>\n\nexport const NewArcIcon = <svg width={16} height={16} viewBox=\"0 0 16 16\">\n    <desc>new-arc</desc>\n    <path d=\"M0,8 Q4,0 8,8 12,16 16,8\" stroke={Colors.GREEN5} fill=\"none\" strokeWidth={2}/>\n</svg>\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {ProtofunctionType, useProtofunction} from \"../ProtofunctionContext\";\nimport AsciiMathParser from \"../AsciiMathParser\";\nimport katex from \"katex\"\nimport {ExpressionParser} from \"../ExpressionParser\";\nimport {Button, Intent} from \"@blueprintjs/core\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\"\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\"\nimport \"../BP3Restyler.css\"\nimport {InfoDialog} from \"./InfoDialog\";\nimport {JITFunction} from \"../GlamCore\";\nimport {NewArcIcon, NewPointIcon} from \"./Icons\";\n\ninterface FunctionEntryProps {\n    n: number\n    removeCallback: () => void\n    parser: AsciiMathParser\n    drawCallback: (id: number, remove: boolean) => void\n    type: ProtofunctionType\n}\n\nconst jitCache: Record<string, JITFunction> = {}\n\nexport const FunctionEntry: React.FC<FunctionEntryProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.n, props.type)\n    const inputRef = useRef<HTMLInputElement>(null)\n    const prettyRef = useRef<HTMLDivElement>(null)\n    const [compiling, setCompiling] = useState(false)\n    const [functionSourceOpen, setFunctionSourceOpen] = useState(false)\n\n    useEffect(() => {\n        if (inputRef.current && prettyRef.current) {\n            props.parser.input(inputRef.current.value)\n            const result = props.parser.consume()\n            katex.render(result.tex, prettyRef.current, {throwOnError: false, displayMode: true})\n            if (result.exprs[0]) {\n                const semanticParser = new ExpressionParser()\n                semanticParser.visit(result.exprs[0])\n                updatePf({\n                    name: semanticParser.functionName,\n                    parameterName: semanticParser.functionArg,\n                    text: inputRef.current.value,\n                    stack: semanticParser.stack,\n                    functionName: semanticParser.generateFunctionName()\n                })\n                if (semanticParser.error) {\n                    console.error(semanticParser.error)\n                } else {\n                    console.log(semanticParser.stack)\n                }\n            }\n        }\n    }, [pf.text, props.parser])\n\n    useEffect(() => {\n        if (pf.drawing) {\n            if (!pf.jitFunction || (pf.jitFunction.getName() !== pf.functionName)) {\n                if (!jitCache[pf.functionName]) {\n                    const metafactory = new Module.FunctionMetafactory(pf.name, pf.parameterName, pf.id, pf.functionName)\n                    metafactory.visitStack(pf.stack)\n                    const func = metafactory.visitEnd()\n                    func.install()\n                    console.log(\"js: \" + func.getHandle());\n                    jitCache[pf.functionName] = func.clone()\n                    updatePf({jitFunction: func})\n                    metafactory.delete()\n                } else {\n                    updatePf({jitFunction: jitCache[pf.functionName]})\n                }\n                props.drawCallback(props.n, false)\n                updatePf({drawing: false})\n            }\n        }\n\n        // we don't automatically recompile (yet)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pf.drawing])\n\n    return (<div className=\"function-entry-container\">\n        <div className=\"function-control-panel\">\n            <button className=\"function-color-button\" style={{backgroundColor: pf.style.stroke}} onClick={(event => {\n                const newColor = `hsla(${Math.random() * 360}, 80%, 60%, 1)`;\n                updatePf({style: {stroke: newColor}})\n            })} />\n\n            <Button id=\"draw -function\" minimal icon=\"play\" disabled={!pf.stack || pf.stack.length === 0} loading={pf.drawing} onClick={event => {\n                updatePf({drawing: true})\n            }} intent={pf.jitFunction ? (pf.jitFunction.getName() === pf.functionName ? Intent.NONE : Intent.WARNING) : Intent.NONE}/>\n\n            <Button minimal icon=\"cog\" disabled={!pf.jitFunction} onClick={event => setFunctionSourceOpen(true)} />\n        </div>\n        <input ref={inputRef} className=\"function-input-line\" onInput={(event) => updatePf({text: (event.target as HTMLInputElement).value})}/>\n        <div ref={prettyRef} className=\"function-pretty\" />\n        <div className=\"function-delete-button-container\">\n            <Button minimal small={true} icon=\"small-cross\" intent={Intent.DANGER} onClick={() => {\n                props.drawCallback(pf.id, true)\n                if (pf.jitFunction) {\n                    pf.jitFunction.cleanup()\n                    pf.jitFunction.delete()\n                }\n                props.removeCallback()\n            }} />\n        </div>\n\n        <InfoDialog isOpen={functionSourceOpen} closeCallback={() => setFunctionSourceOpen(false)} pfId={props.n} />\n    </div>)\n}\n\ninterface NewFunctionEntryProps {\n    addFunction: (type: ProtofunctionType) => void\n}\n\nexport const NewFunctionEntry: React.FC<NewFunctionEntryProps> = (props) => {\n\n    return <div className=\"new-function-button-container\">\n            <Button id=\"new-point\" minimal icon={NewPointIcon} intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.C)} disabled={true}/>\n            <Button id=\"new-arc\" minimal icon={NewArcIcon} intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.R2C)}/>\n            <Button id=\"new-fxn\" minimal intent={Intent.SUCCESS} large={true} onClick={() => props.addFunction(ProtofunctionType.C2C)}><b>&#x2102;</b></Button>\n        </div>\n}\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport \"./FunctionEntry\"\nimport {FunctionEntry, NewFunctionEntry} from \"./FunctionEntry\";\nimport \"./LeftSidebar.css\"\nimport AsciiMathParser from \"../AsciiMathParser\";\nimport {ProtofunctionType} from \"../ProtofunctionContext\";\n\ninterface SidebarProps {\n    drawCallback: (id: number, remove: boolean) => void\n}\n\nexport const LeftSidebar: React.FC<SidebarProps> = (props) => {\n    const parser = new AsciiMathParser()\n    const [nextPf, setNextPf] = useState(0)\n    const [activePfs, setActivePfs] = useState<Map<number, ProtofunctionType>>(new Map())\n\n    return <div className=\"left-sidebar\">\n        <p>there will be something here eventually i promise</p>\n        {activePfs.size > 0\n            ? [...activePfs].map(pair => <FunctionEntry key={pair[0]} n={pair[0]} removeCallback={() => {\n                setActivePfs(pfs => {\n                    const newState = new Map(pfs)\n                    newState.delete(pair[0])\n                    return newState\n                })\n            }} parser={parser} drawCallback={props.drawCallback} type={pair[1]}/>)\n            : <></>}\n        <NewFunctionEntry addFunction={(type => {\n            setActivePfs(oldState => {\n                const newState = new Map(oldState)\n                newState.set(nextPf, type)\n                return newState\n            })\n            setNextPf(n => n + 1)\n        })}/>\n        </div>\n}\n","import {Protofunction} from \"./ProtofunctionContext\";\nimport {complex} from \"./GlamCore\";\n\nexport interface Signal {\n    signalName: string\n    _dataType: (t: any) => void\n}\n\nexport type SS<T> = (data: T) => Signal\n\nfunction _build<T>(name: string, extra = {}): SS<T> {\n    return (data: T) => {\n        return {\n            signalName: name,\n            ...data,\n            ...extra,\n            _dataType: (t: T) => {}\n        }\n    };\n}\n\nexport const SigReady: SS<{}> = _build(\"Ready\")\nexport const SigArcFocus: SS<{arc: number}> = _build(\"ArcFocus\")\nexport const SigTreeRecalculate: SS<{root: string, value: complex}> = _build(\"TreeRecalculate\")\n","/*\n * Copyright 2021 Kioshi Morosin <glam@hex.lc>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {createRef, Dispatch, useContext, useEffect, useMemo, useReducer, useState} from \"react\";\nimport {Protofunction, ProtofunctionType, useProtofunction} from \"../ProtofunctionContext\";\nimport \"./PlotObject.css\"\nimport {complex, f64BufferView, Multipoint} from \"../GlamCore\";\nimport {SigArcFocus} from \"../Signals\";\nimport {SignalContext} from \"../GlamContext\";\n\nexport interface PlotObjectProps {\n    pfId: number\n    limits: [number, number, number, number]\n    res: number\n}\n\ninterface PlotObjectChildProps extends PlotObjectProps {\n    pf: Protofunction\n    updatePf: Dispatch<any>\n}\n\nexport const PlotObject: React.FC<PlotObjectProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n\n    switch (pf.type) {\n        case ProtofunctionType.C:\n            return <></>\n        case ProtofunctionType.R2C:\n            return <PlotArc {...props} pf={pf} updatePf={updatePf}/>\n        case ProtofunctionType.C2C:\n            return <ColorPlot {...props} pf={pf} updatePf={updatePf}/>\n    }\n}\n\nexport const PlotPoint: React.FC<PlotObjectChildProps> = (props) => {\n    const [pf, updatePf] = useProtofunction(props.pfId)\n    const point = useMemo(() => {\n        if (pf.stack) {\n            // do a one-off evaluation here\n            return [0,0]\n        }\n    }, [pf.stack])\n\n    return <circle id={`plot-point-${pf.id}`} className=\"plot-point\" style={pf.style} r={0.1}/>\n}\n\nexport const PlotArc: React.FC<PlotObjectChildProps> = (props) => {\n    const multipoint = useMemo(() => {\n        return new Module.RealMultipoint(props.pf.jitFunction!, props.limits[0], props.limits[2], props.res)\n    }, [props.pf.jitFunction])\n    const [ctx, dispatch] = useContext(SignalContext)\n\n    const points = useMemo(() => {\n        if (multipoint) {\n            console.debug(\"evaluating multipoint\")\n            multipoint.fullEval()\n            const [ptr, len] = multipoint.getValues()\n            return f64BufferView(ptr, len)\n        } else {\n            // todo refine multipoint if needed\n        }\n\n    }, [multipoint])\n\n    return (<polyline id={`plot-arc-${props.pfId}`} className=\"plot-arc\" fill=\"none\" style={props.pf.style}\n                      points={points?.join(\",\")} onMouseOver={() => {\n        dispatch(SigArcFocus({arc: props.pfId}))\n    }} onMouseOut={() => dispatch(SigArcFocus({arc: -1}))}/>)\n}\n\nexport const ColorPlot: React.FC<PlotObjectChildProps> = (props) => {\n    const multipoint = useMemo(() => {\n        return new Module.ComplexMultipoint(props.pf.jitFunction!, [props.limits[0], props.limits[1]], [props.limits[2], props.limits[3]], props.res)\n    }, [props.pf.jitFunction])\n\n    const colors = useMemo(() => {\n        if (multipoint) {\n            console.debug(\"evaluating multipoint\")\n            multipoint.fullEval()\n            multipoint.getValues()\n            const cb = multipoint.getColors()\n            console.log(cb)\n            return cb\n        } else {\n            // todo refine multipoint if needed\n        }\n\n    }, [multipoint])\n\n    const image = useMemo(() => {\n        if (colors) {\n            const canvas = document.createElement(\"canvas\")\n            const ctx = canvas.getContext(\"2d\")\n            if (!ctx) {\n                console.error(\"could not get canvas context\")\n                return\n            }\n            const width = (props.limits[2] - props.limits[0]) * props.res\n            const height = (props.limits[3] - props.limits[1]) * props.res\n            canvas.width = width\n            canvas.height = height\n            console.debug(\"plot: \" + width + \"x\" + height)\n\n            const [ptr, len] = colors.getBuffer()\n            const buffer = new Uint8ClampedArray(Module.HEAPU8.buffer, ptr, len)\n            console.debug(buffer)\n            const imageData = new ImageData(buffer, width)\n            ctx.putImageData(imageData, 0, 0)\n            return canvas.toDataURL(\"image/png\")\n        }\n    }, [colors])\n\n    return <image id={`color-plot-${props.pf.id}`} className=\"color-plot\"\n                  width={(props.limits[2] - props.limits[1])} height={(props.limits[3] - props.limits[1])} href={image}\n                  x={props.limits[0]} y={props.limits[1]} preserveAspectRatio=\"xMidYMid meet\"/>\n}\n","import {StackObject} from \"./ExpressionParser\";\nimport ReactDOM from \"react-dom\";\nimport {GraphController} from \"./components/GraphController\";\nimport React from \"react\";\n\nexport type ptr = number\nexport type f64 = number\nexport type i32 = number\nexport type u32 = number\nexport type complex = [number, number]\n\nexport type JSBuffer = [ptr, i32]\nexport type JITResult = [string, number, number]; // function name, module base, module length\n\nexport interface FunctionMetafactory {\n    new(name: string, parameterName: string, id: number, functionName: string): FunctionMetafactory\n\n    visitFunction(): void\n    visitStack(stack: StackObject[]): void\n    visit(obj: StackObject): void\n    visitEnd(): JITFunction\n    isIdentifierKnown(str: string): boolean\n    delete(): void\n}\n\nexport interface JITFunction {\n    install(): void\n    getHandle(): ptr\n    getName(): string\n    getModule(): ptr\n    getModuleLen(): number\n    delete(): void\n    cleanup(): void;\n    clone(): JITFunction\n}\n\nexport interface ColorBuffer {\n    getBuffer(): JSBuffer\n    getLength(): number\n    delete(): void\n}\n\nexport interface Multipoint<T> {\n    new(func: JITFunction, from: T, to: T, res: u32): Multipoint<T>\n\n    fullEval(): void\n    getValues(): JSBuffer\n    getColors(): ColorBuffer\n    delete(): void\n}\n\nexport interface GlamCoreModule extends EmscriptenModule {\n    FunctionMetafactory: FunctionMetafactory\n    RealMultipoint: Multipoint<number>\n    ComplexMultipoint: Multipoint<complex>\n    ccall: typeof ccall\n\n    _jit_morpheme_base: ptr\n    _jit_morpheme_add: ptr\n    _jit_morpheme_sub: ptr\n    _jit_morpheme_mul: ptr\n    _jit_morpheme_div: ptr\n    _jit_morpheme_exp: ptr\n    _jit_morpheme_sin: ptr\n    _jit_morpheme_cos: ptr\n    _jit_morpheme_tan: ptr\n    _jit_morpheme_sinh: ptr\n    _jit_morpheme_cosh: ptr\n    _jit_morpheme_tanh: ptr\n}\n\ndeclare global {\n    const wasmMemory: WebAssembly.Memory\n    const wasmTable: WebAssembly.Table\n    const Module: GlamCoreModule\n}\n\nexport function f64BufferView(address: ptr, len: i32) {\n    return Module.HEAPF64.subarray(address / 8, (address / 8) + len)\n}\n","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport \"./PlotGrid.css\"\nimport {PlotObject} from \"./PlotObject\";\n\nexport interface PlotGridProps {\n    majorTicks: number // math units between each major tick\n    minorTicks: number // minor ticks per major tick\n    limits: [number, number, number, number] // in math units\n    drawList: number[]\n}\n\nexport const PlotGrid: React.FC<PlotGridProps> = (props) => {\n    const container = useRef<HTMLDivElement>(null);\n    const [gridSteps, setGridSteps] = useState(0);\n    const [originGridCoords, setOriginGridCoords] = useState<[number, number]>([0, 0]);\n    const [nMajorTicks, setNMajorTicks] = useState([0, 0])\n\n    useEffect(() => {\n        if (!container.current) {\n            return;\n        }\n\n        const viewportCenter = [container.current.offsetWidth / 2, container.current.offsetHeight / 2]\n\n        const _gridSteps = Math.min(container.current.offsetWidth / (props.limits[1] - props.limits[0]), container.current.offsetHeight / (props.limits[3] - props.limits[2]));\n        setNMajorTicks([Math.ceil(container.current.offsetWidth / _gridSteps), Math.ceil(container.current.offsetHeight / _gridSteps)])\n\n        const _originGridCoords: [number, number] = [viewportCenter[0], viewportCenter[1]]\n        setGridSteps(_gridSteps)\n        setOriginGridCoords(_originGridCoords)\n\n    }, [props])\n\n    return (<div ref={container} className=\"plot-grid-container\">\n        <svg className=\"plot-space\" width=\"100%\" height=\"100%\"\n             viewBox={`${props.limits[0]} ${props.limits[1]} ${props.limits[2] - props.limits[0]} ${props.limits[3] - props.limits[1]}`}\n             preserveAspectRatio=\"xMidYMid slice\">\n            <g className=\"coordinate-y-flip\">\n                <PlotAxes limits={props.limits} majorInterval={props.majorTicks} minorTicksPerMajor={props.minorTicks} hideMinorGrid={false} />\n                {props.drawList.map(id =>{\n                    return <PlotObject key={id} pfId={id} limits={[props.limits[0], props.limits[1], props.limits[2], props.limits[3]]} res={50} />\n                })}\n            </g>\n        </svg>\n    </div>)\n}\n\nexport interface PlotAxisProps {\n    limits: [number, number, number, number]\n    majorInterval: number\n    minorTicksPerMajor: number\n    hideMinorGrid: boolean\n}\n\nconst PlotAxes: React.FC<PlotAxisProps> = (props) => {\n    const minorInterval = props.majorInterval / props.minorTicksPerMajor;\n\n    return (<>\n            <defs>\n                <pattern id=\"grid-lines-minor\" width={minorInterval}\n                         height={minorInterval}\n                         patternUnits=\"userSpaceOnUse\">\n                    <path className=\"plot-grid-minor-line\" d={`M ${minorInterval} 0 L 0 0 0 ${minorInterval}`}/>\n                </pattern>\n                <pattern id=\"grid-lines-major\" width={props.majorInterval} height={props.majorInterval} patternUnits=\"userSpaceOnUse\">\n                    {props.hideMinorGrid ? <></> : <rect width={props.majorInterval} height={props.majorInterval} fill=\"url(#grid-lines-minor)\"/>}\n                    <path className=\"plot-grid-major-line\" d={`M ${props.majorInterval} 0 L 0 0 0 ${props.majorInterval}`}/>\n                </pattern>\n            </defs>\n\n            <rect x={props.limits[0]} y={props.limits[1]} width=\"100%\" height=\"100%\" fill=\"url(#grid-lines-major)\" />\n\n            <line className=\"plot-grid-axis-line\" x1={props.limits[0]} y1=\"0\" x2={props.limits[2]} y2=\"0\" />\n            <line className=\"plot-grid-axis-line\" x1=\"0\" y1={props.limits[1]} x2=\"0\" y2={props.limits[3]} />\n\n            {[...Array(Math.ceil(props.limits[2] / props.majorInterval)).keys()].map(n => n+1).map(n => {\n                return <text key={n + \",0\"} className=\"plot-grid-major-label\" x={n} y=\"0\" fontSize=\"0.1\">{n}</text>\n            })}\n\n            {[...Array(Math.ceil(Math.abs(props.limits[0] / props.majorInterval))).keys()].map(n => n+1).map(n => {\n                return <text key={\"-\" + n + \",0\"} className=\"plot-grid-major-label\" x={-n} y=\"0\" fontSize=\"0.1\">-{n}</text>\n            })}\n\n\n            {[...Array(Math.ceil(props.limits[3] / props.majorInterval)).keys()].map(n => n+1).map(n => {\n                return <text key={\"0,\" + n}className=\"plot-grid-major-label\" x=\"0\" y={n} fontSize=\"0.1\">-{n}i</text>\n            })}\n\n            {[...Array(Math.ceil(Math.abs(props.limits[1] / props.majorInterval))).keys()].map(n => n+1).map(n => {\n                return <text key={\"0,-\" + n} className=\"plot-grid-major-label\" x=\"0\" y={-n} fontSize=\"0.1\">{n}i</text>\n            })}\n    </>)\n}\n","import {GlamAppContextProvider} from \"../GlamContext\";\nimport {ProtofunctionContextProvider} from \"../ProtofunctionContext\";\nimport {LeftSidebar} from \"./LeftSidebar\";\nimport {PlotGrid} from \"./PlotGrid\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const GraphController: React.FC = (props) => {\n    const [drawList, setDrawList] = useState<number[]>([])\n    const draw = useCallback((pfId: number, remove: boolean = false) => {\n        if (remove) {\n            setDrawList(drawList.filter(n => n !== pfId))\n        } else if (!drawList.includes(pfId)) {\n            setDrawList([...drawList, pfId])\n        }\n    }, [drawList, setDrawList])\n\n    return (<>\n        <GlamAppContextProvider>\n            <ProtofunctionContextProvider>\n                <LeftSidebar drawCallback={draw} />\n                <PlotGrid majorTicks={1} minorTicks={5} limits={[-4, -4, 4, 4]} drawList={drawList}/>\n            </ProtofunctionContextProvider>\n        </GlamAppContextProvider>\n    </>)\n}","import './index.css';\nimport \"./GlamCore\"\nimport ReactDOM from \"react-dom\";\nimport {GraphController} from \"./components/GraphController\";\nimport React from \"react\";\n\nwindow.addEventListener(\"nativeInit\", () => {\n    ReactDOM.render(<GraphController />,\n        document.querySelector(\".glam-app-container\")\n    );\n})\n"],"sourceRoot":""}